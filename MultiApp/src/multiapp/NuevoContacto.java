/*
 * ActividadDeProgramación = "MultiApp"
 * Descripción =⠀"Reutilizar clases creadas a lo largo del semestre para integrarlos en una interfaz grafica"⠀⠀
 * Nombre = "Fernando Samuel Razón Gómez"
 * OtrosDatos = "UDG - Cualtos - ICOM - POO - Profesor Sergio"
 * ⠀⠀⠀⠀⠀⠀⠀⠀⡤⢲⠞⢉⡽⠲⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 *⠀⠀⠀⠀⠀⠀⠀⣼⣰⡇⢀⡎⠀⣠⣼⣷⣄⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀
 *⠀⠀⠀⠀⠀⠀⠀⣿⣿⣷⣿⣀⣀⡼⢉⣿⣿⣷⣶⣶⠖⠈⠉⠚⠛⠣⣀⠀⠀⠀
 *⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣌⣉⣠⣾⣿⣿⣿⣿⠇⠀⠀⣀⡀⠀⠀⠀⠑⢤⣄
 *⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⡿⢟⣿⣿⣿⣿⠀⠀⠀⠻⣯⠆⠀⠀⠀⠈⡇
 *⠀⠀⠀⠀⠀⠀⠀⠀⢠⠞⣿⣿⣷⣿⣿⣿⣿⣿⣿⡄⠀⠀⡀⣠⡈⠀⣤⢄⠀⢠
 *⠀⠀⠀⠀⠀⠀⢀⡴⠃⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠳⣸⠷⠄⠲⠾⢇⠆
 *⠀⠀⠀⠀⠀⣠⠞⠀⠀⠀⠀⠈⠛⠿⣿⣿⣿⣿⣿⣿⣷⣤⣀⠀⠀⢀⡠⠐⠁⠀
 *⠀⠀⠀⢀⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠿⣿⣿⣿⢿⣿⣿⣖⣂⠀⠀⠀
 *⠀⠀⢀⢶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⣿⠉⡇⢹⣸⠀⠀⠀
 *⠀⡠⠙⣻⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠿⠿⠚⠛⠋⠁⠀⠀⠀
 *⣸⡆⠀⢣⣳⡀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⡖⠲⠆⣺⣁⡀⣠⣴⣲⠒⣦⠀⠀⠀
 *⢿⣿⡀⠀⠙⠺⠗⣶⣢⣔⣲⣲⠯⠟⠊⠀⣦⣾⡿⠁⣴⢡⡟⠉⠉⠙⠤⠆⠀⠀
 *⠈⢿⣿⣦⡀⢀⣤⣤⣀⣀⠀⠀⠀⠀⢠⣾⣿⣿⡇⠀⣧⢸⡄⠀⠀⠀⡼⠃⠀⠀
 *⠀⠈⠛⠛⠚⠁⠀⠀⠀⠉⠉⠙⠒⠢⠽⢿⣿⣿⣷⡀⢻⣦⡙⠲⠶⠛⠁⠀⠀⠀
 */
package multiapp;

import Librerias.Alumno;
import Librerias.Docente;
import Librerias.Intendente;
import Librerias.Secretaria;
import Librerias.Util;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static multiapp.MultiApp.multiApp;

/**
 *
 * @author samue
 */
public class NuevoContacto extends javax.swing.JFrame {
    private static NuevoContacto instancia;
    private String clase;
    
    //Arraylist para guardar las materias del alumno 
    protected ArrayList<String> materias;
    protected ArrayList<Float> promedios;
    protected ArrayList<String> horarios;
    
    //ArrayList para guardar las materias del profesor
    protected ArrayList<String> materiasP;
    
    /**
     * Creates new form NuevoContacto
     */
    private NuevoContacto() {
        initComponents();
        pModular.setLayout(new BoxLayout(pModular, BoxLayout.Y_AXIS)); // Asignar Layot "modular"
        pModular.add(pAtributosPersona); //Añadir el panel de persona al panel modular
        bAlumno.setSelected(true); //Colocar boton alumno en true por defecto
        this.setLocationRelativeTo(null);//Posicionar ventana en el centro
        clase = "Alumno";
        
        //Inicializar arrays
        materias = new ArrayList<>();
        promedios = new ArrayList<>();
        horarios = new ArrayList<>();
        materiasP = new ArrayList<>();
        
        //Colocar document listener para permitir solo X caracteres
        cTelefono.setDocument(MultiApp.createPlainDocumentSinPunto(10));
        cNss.setDocument(MultiApp.createPlainDocumentSinPunto(11));
        cPago.setDocument(MultiApp.createPlainDocumentSinPunto(10));
        cCodigo.setDocument(MultiApp.createPlainDocumentSinPunto(9));
        cDiaNacimiento.setDocument(MultiApp.createPlainDocumentSinPunto(2));
        cMesDeNacimiento.setDocument(MultiApp.createPlainDocumentSinPunto(2));
        cYearDeNacimiento.setDocument(MultiApp.createPlainDocumentSinPunto(4));
        cPromedio.setDocument(MultiApp.createPlainDocument(3));
        cSueldo.setDocument(MultiApp.createPlainDocument(9));
        cArea.setDocument(MultiApp.createPlainDocumentLetras(30));
        cNombre.setDocument(MultiApp.createPlainDocumentLetras(50));
        cProfesion.setDocument(MultiApp.createPlainDocumentLetras(40));
        cPuesto.setDocument(MultiApp.createPlainDocumentLetras(40));
        cCurp.setDocument(MultiApp.createPlainDocumentCurp(18));
        cRfc.setDocument(MultiApp.createPlainDocumentCurp(13));
         
        
        
        //Seleccionar icono
        setIconImage(new ImageIcon(getClass().getResource("new-user.png")).getImage());
        
    }
    
    public static NuevoContacto getInstance() { //Metodo singleTone
        if (instancia == null) {
            instancia = new NuevoContacto();
        }else{
            instancia.toFront();
        }
        return instancia;
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pAtributosTrabajador = new javax.swing.JPanel();
        lRfc = new javax.swing.JLabel();
        cRfc = new javax.swing.JTextField();
        lSueldo = new javax.swing.JLabel();
        cSueldo = new javax.swing.JTextField();
        lHorario2 = new javax.swing.JLabel();
        cHorarioT = new javax.swing.JTextField();
        lProfesion = new javax.swing.JLabel();
        cProfesion = new javax.swing.JTextField();
        lPuesto = new javax.swing.JLabel();
        cPuesto = new javax.swing.JTextField();
        pAtributosAlumno = new javax.swing.JPanel();
        lPago = new javax.swing.JLabel();
        cPago = new javax.swing.JTextField();
        lMaterias = new javax.swing.JLabel();
        cMateria = new javax.swing.JTextField();
        lPromedio = new javax.swing.JLabel();
        cPromedio = new javax.swing.JTextField();
        cHorario = new javax.swing.JTextField();
        lHorario = new javax.swing.JLabel();
        bGuardarMateria = new javax.swing.JButton();
        lSalon = new javax.swing.JLabel();
        cSalon = new javax.swing.JTextField();
        lIndicadorMaterias = new javax.swing.JLabel();
        pAtributosProfesor = new javax.swing.JPanel();
        lMateria = new javax.swing.JLabel();
        cMateriaP = new javax.swing.JTextField();
        lCategoria = new javax.swing.JLabel();
        bNuevaMateria = new javax.swing.JButton();
        lCubiculo = new javax.swing.JLabel();
        cCubiculo = new javax.swing.JTextField();
        lIndicadorMateriasP = new javax.swing.JLabel();
        bPCompleto = new javax.swing.JRadioButton();
        bPMateria = new javax.swing.JRadioButton();
        pAtributosPersona = new javax.swing.JPanel();
        lNombre = new javax.swing.JLabel();
        cNombre = new javax.swing.JTextField();
        lCodigo = new javax.swing.JLabel();
        cCodigo = new javax.swing.JTextField();
        lCorreo = new javax.swing.JLabel();
        cCorreo = new javax.swing.JTextField();
        lTelefono = new javax.swing.JLabel();
        cTelefono = new javax.swing.JTextField();
        lDomicilio = new javax.swing.JLabel();
        cDomicilio = new javax.swing.JTextField();
        lCurp = new javax.swing.JLabel();
        cCurp = new javax.swing.JTextField();
        lNss = new javax.swing.JLabel();
        cNss = new javax.swing.JTextField();
        lDiaDeNacimiento = new javax.swing.JLabel();
        cDiaNacimiento = new javax.swing.JTextField();
        lMesDeNacimiento = new javax.swing.JLabel();
        cMesDeNacimiento = new javax.swing.JTextField();
        lYearDeNacimiento = new javax.swing.JLabel();
        cYearDeNacimiento = new javax.swing.JTextField();
        lSexo = new javax.swing.JLabel();
        bMasculino = new javax.swing.JRadioButton();
        bFemenino = new javax.swing.JRadioButton();
        lEstadoCivil = new javax.swing.JLabel();
        bSoltero = new javax.swing.JRadioButton();
        bCasado = new javax.swing.JRadioButton();
        pAtributosSecretaria = new javax.swing.JPanel();
        lOficina = new javax.swing.JLabel();
        cOficina = new javax.swing.JTextField();
        pAtributosIntendente = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cArea = new javax.swing.JTextField();
        grupoSexo = new javax.swing.ButtonGroup();
        grupoTipoDeContacto = new javax.swing.ButtonGroup();
        grupoEstadoCivil = new javax.swing.ButtonGroup();
        grupoCategoria = new javax.swing.ButtonGroup();
        bEnviar = new javax.swing.JButton();
        nCancelar = new javax.swing.JButton();
        ContenedorAtributos = new javax.swing.JScrollPane();
        contenedor = new javax.swing.JPanel();
        pModular = new javax.swing.JPanel();
        bAlumno = new javax.swing.JToggleButton();
        bProfesor = new javax.swing.JToggleButton();
        bSecretaria = new javax.swing.JToggleButton();
        bIntendente = new javax.swing.JToggleButton();

        lRfc.setText("RFC");

        lSueldo.setText("Sueldo");

        lHorario2.setText("Horario");

        lProfesion.setText("Profesión");

        lPuesto.setText("Puesto");

        javax.swing.GroupLayout pAtributosTrabajadorLayout = new javax.swing.GroupLayout(pAtributosTrabajador);
        pAtributosTrabajador.setLayout(pAtributosTrabajadorLayout);
        pAtributosTrabajadorLayout.setHorizontalGroup(
            pAtributosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAtributosTrabajadorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAtributosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cRfc)
                    .addComponent(cSueldo)
                    .addComponent(cHorarioT)
                    .addComponent(cProfesion)
                    .addGroup(pAtributosTrabajadorLayout.createSequentialGroup()
                        .addGroup(pAtributosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lRfc)
                            .addComponent(lSueldo)
                            .addComponent(lHorario2)
                            .addComponent(lProfesion)
                            .addComponent(lPuesto))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cPuesto, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))
                .addContainerGap())
        );
        pAtributosTrabajadorLayout.setVerticalGroup(
            pAtributosTrabajadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAtributosTrabajadorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lRfc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cRfc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lSueldo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lHorario2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cHorarioT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lProfesion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cProfesion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lPuesto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cPuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lPago.setText("Pago semestral");

        lMaterias.setText("Materias");

        lPromedio.setText("Promedio");

        lHorario.setText("Horario");

        bGuardarMateria.setText("Añadir  materia");
        bGuardarMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarMateriaActionPerformed(evt);
            }
        });

        lSalon.setText("Salon");

        cSalon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cSalonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pAtributosAlumnoLayout = new javax.swing.GroupLayout(pAtributosAlumno);
        pAtributosAlumno.setLayout(pAtributosAlumnoLayout);
        pAtributosAlumnoLayout.setHorizontalGroup(
            pAtributosAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAtributosAlumnoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAtributosAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cPago)
                    .addGroup(pAtributosAlumnoLayout.createSequentialGroup()
                        .addGroup(pAtributosAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lPago)
                            .addGroup(pAtributosAlumnoLayout.createSequentialGroup()
                                .addComponent(lMaterias)
                                .addGap(149, 149, 149)
                                .addComponent(lPromedio))
                            .addGroup(pAtributosAlumnoLayout.createSequentialGroup()
                                .addComponent(cMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(cPromedio, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pAtributosAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pAtributosAlumnoLayout.createSequentialGroup()
                                .addComponent(lHorario)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(cHorario, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pAtributosAlumnoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lIndicadorMaterias)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bGuardarMateria))
                    .addGroup(pAtributosAlumnoLayout.createSequentialGroup()
                        .addComponent(lSalon)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cSalon))
                .addContainerGap())
        );
        pAtributosAlumnoLayout.setVerticalGroup(
            pAtributosAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAtributosAlumnoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lPago)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAtributosAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lMaterias)
                    .addComponent(lPromedio)
                    .addComponent(lHorario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAtributosAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cPromedio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAtributosAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bGuardarMateria)
                    .addComponent(lIndicadorMaterias))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lSalon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cSalon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lMateria.setText("Materia");

        lCategoria.setText("Categoría");

        bNuevaMateria.setText("Nueva Materia");
        bNuevaMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNuevaMateriaActionPerformed(evt);
            }
        });

        lCubiculo.setText("Cubículo");

        grupoCategoria.add(bPCompleto);
        bPCompleto.setText("Tiempo completo");
        bPCompleto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bPCompletoItemStateChanged(evt);
            }
        });
        bPCompleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPCompletoActionPerformed(evt);
            }
        });

        grupoCategoria.add(bPMateria);
        bPMateria.setText("Profesor de Materia");
        bPMateria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bPMateriaItemStateChanged(evt);
            }
        });
        bPMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPMateriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pAtributosProfesorLayout = new javax.swing.GroupLayout(pAtributosProfesor);
        pAtributosProfesor.setLayout(pAtributosProfesorLayout);
        pAtributosProfesorLayout.setHorizontalGroup(
            pAtributosProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAtributosProfesorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAtributosProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cCubiculo)
                    .addGroup(pAtributosProfesorLayout.createSequentialGroup()
                        .addGroup(pAtributosProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lCategoria)
                            .addComponent(lCubiculo)
                            .addGroup(pAtributosProfesorLayout.createSequentialGroup()
                                .addGroup(pAtributosProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cMateriaP, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lMateria))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pAtributosProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lIndicadorMateriasP)
                                    .addComponent(bNuevaMateria)))
                            .addGroup(pAtributosProfesorLayout.createSequentialGroup()
                                .addComponent(bPCompleto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bPMateria)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pAtributosProfesorLayout.setVerticalGroup(
            pAtributosProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAtributosProfesorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAtributosProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lMateria)
                    .addComponent(lIndicadorMateriasP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAtributosProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cMateriaP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bNuevaMateria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lCategoria)
                .addGap(5, 5, 5)
                .addGroup(pAtributosProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bPCompleto)
                    .addComponent(bPMateria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lCubiculo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cCubiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        lNombre.setText("Nombre");

        cNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cNombreActionPerformed(evt);
            }
        });

        lCodigo.setText("Codigo");

        lCorreo.setText("Correo");

        lTelefono.setText("Telefono");

        cTelefono.setColumns(10);

        lDomicilio.setText("Domicilio");

        lCurp.setText("CURP");

        cCurp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cCurpActionPerformed(evt);
            }
        });

        lNss.setText("NSS");

        lDiaDeNacimiento.setText("Dia de nacimiento");

        cDiaNacimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cDiaNacimientoActionPerformed(evt);
            }
        });

        lMesDeNacimiento.setText("Mes de nacimiento");

        cMesDeNacimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cMesDeNacimientoActionPerformed(evt);
            }
        });

        lYearDeNacimiento.setText("Año de nacimiento");

        lSexo.setText("Sexo");

        grupoSexo.add(bMasculino);
        bMasculino.setText("Masculino");
        bMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMasculinoActionPerformed(evt);
            }
        });

        grupoSexo.add(bFemenino);
        bFemenino.setText("Femenino");

        lEstadoCivil.setText("Estado Civil");

        grupoEstadoCivil.add(bSoltero);
        bSoltero.setText("Soltero/a");

        grupoEstadoCivil.add(bCasado);
        bCasado.setText("Casado/a");

        javax.swing.GroupLayout pAtributosPersonaLayout = new javax.swing.GroupLayout(pAtributosPersona);
        pAtributosPersona.setLayout(pAtributosPersonaLayout);
        pAtributosPersonaLayout.setHorizontalGroup(
            pAtributosPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAtributosPersonaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAtributosPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pAtributosPersonaLayout.createSequentialGroup()
                        .addGroup(pAtributosPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cCorreo)
                            .addComponent(cNombre)
                            .addComponent(cCodigo)
                            .addComponent(cTelefono)
                            .addComponent(cDomicilio)
                            .addComponent(cCurp)
                            .addComponent(cNss)
                            .addGroup(pAtributosPersonaLayout.createSequentialGroup()
                                .addGroup(pAtributosPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lSexo)
                                    .addComponent(lNombre)
                                    .addComponent(lCodigo)
                                    .addComponent(lCorreo)
                                    .addComponent(lTelefono)
                                    .addComponent(lDomicilio)
                                    .addComponent(lCurp)
                                    .addComponent(lNss)
                                    .addGroup(pAtributosPersonaLayout.createSequentialGroup()
                                        .addGroup(pAtributosPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cDiaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lDiaDeNacimiento))
                                        .addGap(32, 32, 32)
                                        .addGroup(pAtributosPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(cMesDeNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lMesDeNacimiento))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addGroup(pAtributosPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cYearDeNacimiento)
                                    .addComponent(lYearDeNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))))
                        .addContainerGap())
                    .addGroup(pAtributosPersonaLayout.createSequentialGroup()
                        .addGroup(pAtributosPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pAtributosPersonaLayout.createSequentialGroup()
                                .addComponent(bMasculino)
                                .addGap(12, 12, 12)
                                .addComponent(bFemenino))
                            .addComponent(lEstadoCivil)
                            .addGroup(pAtributosPersonaLayout.createSequentialGroup()
                                .addComponent(bSoltero)
                                .addGap(12, 12, 12)
                                .addComponent(bCasado)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pAtributosPersonaLayout.setVerticalGroup(
            pAtributosPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAtributosPersonaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lCodigo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lCorreo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lTelefono)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAtributosPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSoltero)
                    .addComponent(bCasado))
                .addGap(11, 11, 11)
                .addComponent(lDomicilio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lCurp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cCurp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lNss)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cNss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAtributosPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pAtributosPersonaLayout.createSequentialGroup()
                        .addGroup(pAtributosPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lYearDeNacimiento)
                            .addComponent(lMesDeNacimiento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pAtributosPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cYearDeNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cMesDeNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pAtributosPersonaLayout.createSequentialGroup()
                        .addComponent(lDiaDeNacimiento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cDiaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lSexo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pAtributosPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bMasculino)
                    .addComponent(bFemenino))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lOficina.setText("Oficina");

        javax.swing.GroupLayout pAtributosSecretariaLayout = new javax.swing.GroupLayout(pAtributosSecretaria);
        pAtributosSecretaria.setLayout(pAtributosSecretariaLayout);
        pAtributosSecretariaLayout.setHorizontalGroup(
            pAtributosSecretariaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAtributosSecretariaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAtributosSecretariaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cOficina)
                    .addGroup(pAtributosSecretariaLayout.createSequentialGroup()
                        .addComponent(lOficina)
                        .addGap(0, 350, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pAtributosSecretariaLayout.setVerticalGroup(
            pAtributosSecretariaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAtributosSecretariaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lOficina)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cOficina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jLabel1.setText("Área");

        javax.swing.GroupLayout pAtributosIntendenteLayout = new javax.swing.GroupLayout(pAtributosIntendente);
        pAtributosIntendente.setLayout(pAtributosIntendenteLayout);
        pAtributosIntendenteLayout.setHorizontalGroup(
            pAtributosIntendenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAtributosIntendenteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAtributosIntendenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pAtributosIntendenteLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cArea, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))
                .addContainerGap())
        );
        pAtributosIntendenteLayout.setVerticalGroup(
            pAtributosIntendenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAtributosIntendenteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Nuevo contacto");
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        bEnviar.setText("Añadir contacto");
        bEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEnviarActionPerformed(evt);
            }
        });

        nCancelar.setText("Cancelar");
        nCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nCancelarActionPerformed(evt);
            }
        });

        ContenedorAtributos.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        javax.swing.GroupLayout pModularLayout = new javax.swing.GroupLayout(pModular);
        pModular.setLayout(pModularLayout);
        pModularLayout.setHorizontalGroup(
            pModularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 613, Short.MAX_VALUE)
        );
        pModularLayout.setVerticalGroup(
            pModularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 514, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout contenedorLayout = new javax.swing.GroupLayout(contenedor);
        contenedor.setLayout(contenedorLayout);
        contenedorLayout.setHorizontalGroup(
            contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pModular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(583, Short.MAX_VALUE))
        );
        contenedorLayout.setVerticalGroup(
            contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorLayout.createSequentialGroup()
                .addComponent(pModular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        ContenedorAtributos.setViewportView(contenedor);

        grupoTipoDeContacto.add(bAlumno);
        bAlumno.setText("Alumno");
        bAlumno.setMaximumSize(new java.awt.Dimension(70, 27));
        bAlumno.setMinimumSize(new java.awt.Dimension(70, 27));
        bAlumno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bAlumnoItemStateChanged(evt);
            }
        });
        bAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAlumnoActionPerformed(evt);
            }
        });

        grupoTipoDeContacto.add(bProfesor);
        bProfesor.setText("Profesor");
        bProfesor.setMaximumSize(new java.awt.Dimension(70, 27));
        bProfesor.setMinimumSize(new java.awt.Dimension(70, 27));
        bProfesor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bProfesorItemStateChanged(evt);
            }
        });
        bProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bProfesorActionPerformed(evt);
            }
        });

        grupoTipoDeContacto.add(bSecretaria);
        bSecretaria.setText("Secretaria");
        bSecretaria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bSecretariaItemStateChanged(evt);
            }
        });
        bSecretaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSecretariaActionPerformed(evt);
            }
        });

        grupoTipoDeContacto.add(bIntendente);
        bIntendente.setText("Intendente");
        bIntendente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bIntendenteItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ContenedorAtributos, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(nCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bEnviar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(bAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bSecretaria, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bIntendente, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bSecretaria)
                    .addComponent(bIntendente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ContenedorAtributos, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bEnviar)
                    .addComponent(nCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cNombreActionPerformed

    private void cCurpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cCurpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cCurpActionPerformed

    private void cDiaNacimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cDiaNacimientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cDiaNacimientoActionPerformed

    private void cMesDeNacimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cMesDeNacimientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cMesDeNacimientoActionPerformed

    /**
     * Cerrar sin guardar ningun dato
     * @param evt Presionar boton cancelar
     */
    private void nCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nCancelarActionPerformed
        this.setAlwaysOnTop(false);
        if(JOptionPane.showConfirmDialog(null, "¿Deseas cerrar la ventana?, Perderas los datos introducidos",
                "Cerrar", JOptionPane.YES_NO_OPTION) == 0){
            dispose();
            instancia = null;
        } else {
           this.setAlwaysOnTop(true); 
        }
    }//GEN-LAST:event_nCancelarActionPerformed

    private void bAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAlumnoActionPerformed
        
    }//GEN-LAST:event_bAlumnoActionPerformed

    /**
     * Colocar atributos de alumno
     * @param evt 
     */
    private void bAlumnoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bAlumnoItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){ //Si alumno esta seleccionado
            pModular.add(pAtributosAlumno); 
            contenedor.revalidate();
            contenedor.repaint();
            clase = "Alumno";
        } else if (evt.getStateChange() == ItemEvent.DESELECTED) { //Si Alumno deja de seleccionarse
            // Eliminar el panel pAtributosAlumno de pModular
            pModular.remove(pAtributosAlumno);
            contenedor.revalidate();
            contenedor.repaint();
        }
        
    }//GEN-LAST:event_bAlumnoItemStateChanged

    
    
    /**
     * Guardar la materias introducidas, colocar algun señalizador, limpiar espacios
     * @param evt presionar boton guardar materias
     */
    private void bGuardarMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarMateriaActionPerformed
        if (cMateria.getText().isEmpty() || cPromedio.getText().isEmpty() || cHorario.getText().isEmpty()) {
            String mensaje = "Llena los campos de materias, promedio y horario para añadir una materia";
            JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
        } else {
        try {
            float promedio = Float.parseFloat(cPromedio.getText());
            if (promedio > 100 || promedio < 0) {
                String mensaje = "El promedio debe ser mayor a 0 y menor a 100";
                JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
            } else {
                // Guardar los datos introducidos en un array temporal
                materias.add(cMateria.getText());
                promedios.add(promedio);
                horarios.add(cHorario.getText());

                // Limpiar los campos
                cMateria.setText("");
                cPromedio.setText("");
                cHorario.setText("");

                // Colocar indicador
                lIndicadorMaterias.setText(materias.size() + " Materias añadidas");
            }
        } catch (NumberFormatException e) {
            // Capturar la excepción si la conversión a float falla
            String mensaje = "Ingrese un valor válido para el promedio";
            JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
        }
    }
    }//GEN-LAST:event_bGuardarMateriaActionPerformed

    private void cSalonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cSalonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cSalonActionPerformed

    /**
     * Guardar los datos de contacto segun el tipo seleccionado
     * @param evt 
     */
    private void bEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEnviarActionPerformed
        switch(clase){
            case "Alumno" -> {
                if (cNombre.getText().isEmpty() || cCodigo.getText().isEmpty() || cCorreo.getText().isEmpty()
                    || cTelefono.getText().isEmpty() || (bSoltero.isSelected() && bCasado.isSelected())
                    || cDomicilio.getText().isEmpty() || cCurp.getText().isEmpty()
                    || cNss.getText().isEmpty() 
                    || (!bMasculino.isSelected() && !bFemenino.isSelected()) || cPago.getText().isEmpty()
                    || cSalon.getText().isEmpty() || cDiaNacimiento.getText().isBlank() 
                    || cMesDeNacimiento.getText().isBlank() || cYearDeNacimiento.getText().isBlank()) 
                {   
                    String mensaje = "Todos los campos deben estar llenos.";
                    JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
                } else if(materias.size() == 0) {
                    String mensaje = "Añade al menos 1 materia.";
                    JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
                } else if(!cTelefono.getText().matches("[0-9]{10}")){
                     String mensaje = "Ingresa un número de telefono de 10 dígitos.";
                    JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
                }
                else{
                    try{
                        //Inicializar alumno y guardar atributos
                        Alumno contacto = new Alumno();

                            //Atributos persona
                        contacto.setNombre(cNombre.getText());
                        contacto.setCodigo(cCodigo.getText());
                        contacto.setCorreo(cCorreo.getText());
                        contacto.setTelefono(cTelefono.getText());
                        if(bSoltero.isSelected()){
                           contacto.setEstadoCivil("S");
                        }else if(bCasado.isSelected()){
                            contacto.setEstadoCivil("C");
                        }
                        contacto.setDomicilio(cDomicilio.getText());
                        contacto.setCurp(cCurp.getText());
                        contacto.setNss(cNss.getText());
                        contacto.setFechaNacimiento(Util.validarFecha(Integer.parseInt(cDiaNacimiento.getText()),
                                Integer.parseInt(cMesDeNacimiento.getText()),
                                Integer.parseInt(cYearDeNacimiento.getText())));
                        if(bMasculino.isSelected()){
                            contacto.setSexo("M");
                        }else if (bFemenino.isSelected()){
                            contacto.setSexo("F");
                        }

                        //Atributos alumno
                        contacto.setPago(Integer.parseInt(cPago.getText()));
                        contacto.setMaterias(materias);
                        contacto.setPromedio(promedios);
                        contacto.setHorario(horarios);
                        contacto.setSalon(cSalon.getText());



                        //Guardar contacto si se pudieron guardar todos los datos correctamente
                        multiApp.nuevoContacto(contacto);
                        
                        //Cerrar jFrame
                        this.dispose();
                        instancia = null;
                        
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.WARNING_MESSAGE);
                    }//Fin catch
                }//Fin if
            }//Fin case Alumno
            case "Docente"-> {
                   if (cNombre.getText().isEmpty() || cCodigo.getText().isEmpty() || cCorreo.getText().isEmpty()
                        || cTelefono.getText().isEmpty() || (bSoltero.isSelected() && bCasado.isSelected())
                        || cDomicilio.getText().isEmpty() || cCurp.getText().isEmpty()
                        || cNss.getText().isEmpty() || (!bMasculino.isSelected() && !bFemenino.isSelected())
                        || cRfc.getText().isEmpty() || cSueldo.getText().isEmpty() || cHorarioT.getText().isEmpty()
                        || cProfesion.getText().isEmpty() || cPuesto.getText().isEmpty() || materiasP.isEmpty()
                        || cCubiculo.getText().isEmpty() || (!bPCompleto.isSelected() && !bPMateria.isSelected())
                        || cDiaNacimiento.getText().isBlank() 
                        || cMesDeNacimiento.getText().isBlank() || cYearDeNacimiento.getText().isBlank()) 
                {
                    String mensaje = "Todos los campos deben estar llenos.";
                    JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
                } else if(materiasP.size() == 0) {
                    String mensaje = "Añade al menos 1 materia.";
                    JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
                } else if(!cTelefono.getText().matches("[0-9]{10}")){
                     String mensaje = "Ingresa un número de telefono de 10 dígitos.";
                    JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
                } else{
                    try{
                        //Inicializar alumno y guardar atributos
                        Docente contacto = new Docente();

                            //Atributos persona
                        contacto.setNombre(cNombre.getText());
                        contacto.setCodigo(cCodigo.getText());
                        contacto.setCorreo(cCorreo.getText());
                        contacto.setTelefono(cTelefono.getText());
                        if(bSoltero.isSelected()){
                           contacto.setEstadoCivil("S");
                        }else if(bCasado.isSelected()){
                            contacto.setEstadoCivil("C");
                        }
                        contacto.setDomicilio(cDomicilio.getText());
                        contacto.setCurp(cCurp.getText());
                        contacto.setNss(cNss.getText());
                        contacto.setFechaNacimiento(Util.validarFecha(Integer.parseInt(cDiaNacimiento.getText()),
                                Integer.parseInt(cMesDeNacimiento.getText()),
                                Integer.parseInt(cYearDeNacimiento.getText())));
                        if(bMasculino.isSelected()){
                            contacto.setSexo("M");
                        }else if (bFemenino.isSelected()){
                            contacto.setSexo("F");
                        }

                        //Atributos trabajador
                        contacto.setRFC(cRfc.getText());
                        contacto.setSueldo(Float.parseFloat(cSueldo.getText()));
                        contacto.setHorario(cHorarioT.getText());
                        contacto.setProfesion(cProfesion.getText());
                        contacto.setPuesto(cPuesto.getText());
                        
                        //Atributos docente
                        contacto.setMaterias(materiasP);
                        contacto.setCubiculo(cCubiculo.getText());  
                        if(bPCompleto.isSelected()){
                            contacto.setCategoria("c");
                        } else if(bPMateria.isSelected()){
                            contacto.setCategoria("m");
                        }

                        //Guardar contacto si se pudieron guardar todos los datos correctamente
                        multiApp.nuevoContacto(contacto);
                        
                        //Cerrar jFrame
                        this.dispose();
                        instancia = null;
                        
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.WARNING_MESSAGE);
                    }//Fin catch
                }//Fin if
                
            }//Fin case Docente
            case "Secretaria" -> {
                if (cNombre.getText().isEmpty() || cCodigo.getText().isEmpty() || cCorreo.getText().isEmpty()
                        || cTelefono.getText().isEmpty() || (bSoltero.isSelected() && bCasado.isSelected())
                        || cDomicilio.getText().isEmpty() || cCurp.getText().isEmpty()
                        || cNss.getText().isEmpty() || (!bMasculino.isSelected() && !bFemenino.isSelected())
                        || cRfc.getText().isEmpty() || cSueldo.getText().isEmpty() || cHorarioT.getText().isEmpty()
                        || cProfesion.getText().isEmpty() || cPuesto.getText().isEmpty() || cOficina.getText().isBlank()
                        || cDiaNacimiento.getText().isBlank() 
                        || cMesDeNacimiento.getText().isBlank() || cYearDeNacimiento.getText().isBlank()) 
                {
                    String mensaje = "Todos los campos deben estar llenos.";
                    JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
                } else if(!cTelefono.getText().matches("[0-9]{10}")){
                     String mensaje = "Ingresa un número de telefono de 10 dígitos.";
                    JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
                } else{
                    try{
                        //Inicializar alumno y guardar atributos
                        Secretaria contacto = new Secretaria();

                            //Atributos persona
                        contacto.setNombre(cNombre.getText());
                        contacto.setCodigo(cCodigo.getText());
                        contacto.setCorreo(cCorreo.getText());
                        contacto.setTelefono(cTelefono.getText());
                        if(bSoltero.isSelected()){
                           contacto.setEstadoCivil("S");
                        }else if(bCasado.isSelected()){
                            contacto.setEstadoCivil("C");
                        }
                        contacto.setDomicilio(cDomicilio.getText());
                        contacto.setCurp(cCurp.getText());
                        contacto.setNss(cNss.getText());
                        contacto.setFechaNacimiento(Util.validarFecha(Integer.parseInt(cDiaNacimiento.getText()),
                                Integer.parseInt(cMesDeNacimiento.getText()),
                                Integer.parseInt(cYearDeNacimiento.getText())));
                        if(bMasculino.isSelected()){
                            contacto.setSexo("M");
                        }else if (bFemenino.isSelected()){
                            contacto.setSexo("F");
                        }

                        //Atributos trabajador
                        contacto.setRFC(cRfc.getText());
                        contacto.setSueldo(Float.parseFloat(cSueldo.getText()));
                        contacto.setHorario(cHorarioT.getText());
                        contacto.setProfesion(cProfesion.getText());
                        contacto.setPuesto(cPuesto.getText());
                        
                        //Atributos Secretaria
                        contacto.setOficina(cOficina.getText());
                       

                        //Guardar contacto si se pudieron guardar todos los datos correctamente
                        multiApp.nuevoContacto(contacto);
                        
                        //Cerrar jFrame
                        this.dispose();
                        instancia = null;
                        
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.WARNING_MESSAGE);
                    }//Fin catch
                }//Fin if
                
            }//Fin case Secretaria
            case "Intendente" -> {
                if (cNombre.getText().isEmpty() || cCodigo.getText().isEmpty() || cCorreo.getText().isEmpty()
                        || cTelefono.getText().isEmpty() || (bSoltero.isSelected() && bCasado.isSelected())
                        || cDomicilio.getText().isEmpty() || cCurp.getText().isEmpty()
                        || cNss.getText().isEmpty() || (!bMasculino.isSelected() && !bFemenino.isSelected())
                        || cRfc.getText().isEmpty() || cSueldo.getText().isEmpty() || cHorarioT.getText().isEmpty()
                        || cProfesion.getText().isEmpty() || cPuesto.getText().isEmpty() || cArea.getText().isBlank()
                        || cDiaNacimiento.getText().isBlank() 
                        || cMesDeNacimiento.getText().isBlank() || cYearDeNacimiento.getText().isBlank()) 
                {
                    String mensaje = "Todos los campos deben estar llenos.";
                    JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
                } else if(!cTelefono.getText().matches("[0-9]{10}")){
                     String mensaje = "Ingresa un número de telefono de 10 dígitos.";
                    JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
                } else{
                    try{
                        //Inicializar alumno y guardar atributos
                        Intendente contacto = new Intendente();

                            //Atributos persona
                        contacto.setNombre(cNombre.getText());
                        contacto.setCodigo(cCodigo.getText());
                        contacto.setCorreo(cCorreo.getText());
                        contacto.setTelefono(cTelefono.getText());
                        if(bSoltero.isSelected()){
                           contacto.setEstadoCivil("S");
                        }else if(bCasado.isSelected()){
                            contacto.setEstadoCivil("C");
                        }
                        contacto.setDomicilio(cDomicilio.getText());
                        contacto.setCurp(cCurp.getText());
                        contacto.setNss(cNss.getText());
                        contacto.setFechaNacimiento(Util.validarFecha(Integer.parseInt(cDiaNacimiento.getText()),
                                Integer.parseInt(cMesDeNacimiento.getText()),
                                Integer.parseInt(cYearDeNacimiento.getText())));
                        if(bMasculino.isSelected()){
                            contacto.setSexo("M");
                        }else if (bFemenino.isSelected()){
                            contacto.setSexo("F");
                        }

                        //Atributos trabajador
                        contacto.setRFC(cRfc.getText());
                        contacto.setSueldo(Float.parseFloat(cSueldo.getText()));
                        contacto.setHorario(cHorarioT.getText());
                        contacto.setProfesion(cProfesion.getText());
                        contacto.setPuesto(cPuesto.getText());
                        
                        //Atributos Intendente
                        contacto.setArea(cArea.getText());

                        //Guardar contacto si se pudieron guardar todos los datos correctamente
                        multiApp.nuevoContacto(contacto);
                        
                        //Cerrar jFrame
                        this.dispose();
                        instancia = null;
                        
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.WARNING_MESSAGE);
                    }//Fin catch
                }//Fin if
                
            }//Fin case Intendete
        }//Fin del switch
        
        //Actualizar tabla y guardar el contacto
        multiApp.actualizarTabla();
    }//GEN-LAST:event_bEnviarActionPerformed

    private void bProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bProfesorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bProfesorActionPerformed
    /**
     * Colocar atributos profesor
     */
    private void bProfesorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bProfesorItemStateChanged
         if(evt.getStateChange() == ItemEvent.SELECTED){ //Si profesor esta seleccionado
            pModular.add(pAtributosTrabajador);
            pModular.add(pAtributosProfesor);
            contenedor.revalidate();
            contenedor.repaint();
            clase = "Docente";
        } else if (evt.getStateChange() == ItemEvent.DESELECTED) { //Si Profesor deja de seleccionarse
            // Eliminar el panel alumno de pModular
            pModular.remove(pAtributosTrabajador);
            pModular.remove(pAtributosProfesor);
            contenedor.revalidate();
            contenedor.repaint();
        }
    }//GEN-LAST:event_bProfesorItemStateChanged

    private void bSecretariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSecretariaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bSecretariaActionPerformed
    /**
     * Colocar atributos secretaria
     * @param evt 
     */
    private void bSecretariaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bSecretariaItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){ //Si Secretaria esta seleccionado
            pModular.add(pAtributosTrabajador);
            pModular.add(pAtributosSecretaria);
            contenedor.revalidate();
            contenedor.repaint();
            clase = "Secretaria";
        } else if (evt.getStateChange() == ItemEvent.DESELECTED) { //Si Secretaria deja de seleccionarse
            // Eliminar el panel alumno de pModular
            pModular.remove(pAtributosTrabajador);
            pModular.remove(pAtributosSecretaria);
            contenedor.revalidate();
            contenedor.repaint();
        }
    }//GEN-LAST:event_bSecretariaItemStateChanged
    /**
     * Colocar atributos intendente
     * @param evt 
     */
    private void bIntendenteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bIntendenteItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){ //Si Intendente esta seleccionado
            pModular.add(pAtributosTrabajador);
            pModular.add(pAtributosIntendente);
            contenedor.revalidate();
            contenedor.repaint();
            clase = "Intendente";
        } else if (evt.getStateChange() == ItemEvent.DESELECTED) { //Si Intendente deja de seleccionarse
            // Eliminar el panel alumno de pModular
            pModular.remove(pAtributosTrabajador);
            pModular.remove(pAtributosIntendente);
            contenedor.revalidate();
            contenedor.repaint();
        }      
    }//GEN-LAST:event_bIntendenteItemStateChanged

    /**
     * Añadir la materia al array temporal y settear texto de indicador
     * @param evt Presionar boton añadir materia
     */
    private void bNuevaMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNuevaMateriaActionPerformed
        if(cMateriaP.getText().isBlank()){
            String mensaje = "Escribe en el espacio materia.";
            JOptionPane.showMessageDialog(this, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
        } else{
            materiasP.add(cMateriaP.getText());
            cMateriaP.setText("");
            lIndicadorMateriasP.setText(materiasP.size() + " Materias");
        }
        
    }//GEN-LAST:event_bNuevaMateriaActionPerformed

    private void bPCompletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPCompletoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bPCompletoActionPerformed

    private void bPMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPMateriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bPMateriaActionPerformed
    /**
     * Profesor de materia seleccionado desabilitar cubiculo
     * @param evt 
     */
    private void bPMateriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bPMateriaItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            cCubiculo.setText("Sin cubículo");
            cCubiculo.setEnabled(false);
        } else {
            cCubiculo.setText("");
            cCubiculo.setEnabled(true);
        }
    }//GEN-LAST:event_bPMateriaItemStateChanged

    private void bPCompletoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bPCompletoItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_bPCompletoItemStateChanged

    private void bMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMasculinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bMasculinoActionPerformed
    
    /**
     * Cerrar adecuadamente
     * @param evt 
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(JOptionPane.showConfirmDialog(null, "¿Deseas cerrar la ventana?, Perderas los datos introducidos",
                "Cerrar", JOptionPane.YES_NO_OPTION) == 0){
            dispose();
            instancia = null;
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevoContacto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevoContacto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevoContacto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevoContacto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NuevoContacto.getInstance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ContenedorAtributos;
    private javax.swing.JToggleButton bAlumno;
    private javax.swing.JRadioButton bCasado;
    private javax.swing.JButton bEnviar;
    private javax.swing.JRadioButton bFemenino;
    private javax.swing.JButton bGuardarMateria;
    private javax.swing.JToggleButton bIntendente;
    private javax.swing.JRadioButton bMasculino;
    private javax.swing.JButton bNuevaMateria;
    private javax.swing.JRadioButton bPCompleto;
    private javax.swing.JRadioButton bPMateria;
    private javax.swing.JToggleButton bProfesor;
    private javax.swing.JToggleButton bSecretaria;
    private javax.swing.JRadioButton bSoltero;
    private javax.swing.JTextField cArea;
    private javax.swing.JTextField cCodigo;
    private javax.swing.JTextField cCorreo;
    private javax.swing.JTextField cCubiculo;
    private javax.swing.JTextField cCurp;
    private javax.swing.JTextField cDiaNacimiento;
    private javax.swing.JTextField cDomicilio;
    private javax.swing.JTextField cHorario;
    private javax.swing.JTextField cHorarioT;
    private javax.swing.JTextField cMateria;
    private javax.swing.JTextField cMateriaP;
    private javax.swing.JTextField cMesDeNacimiento;
    private javax.swing.JTextField cNombre;
    private javax.swing.JTextField cNss;
    private javax.swing.JTextField cOficina;
    private javax.swing.JTextField cPago;
    private javax.swing.JTextField cProfesion;
    private javax.swing.JTextField cPromedio;
    private javax.swing.JTextField cPuesto;
    private javax.swing.JTextField cRfc;
    private javax.swing.JTextField cSalon;
    private javax.swing.JTextField cSueldo;
    private javax.swing.JTextField cTelefono;
    private javax.swing.JTextField cYearDeNacimiento;
    private javax.swing.JPanel contenedor;
    private javax.swing.ButtonGroup grupoCategoria;
    private javax.swing.ButtonGroup grupoEstadoCivil;
    private javax.swing.ButtonGroup grupoSexo;
    private javax.swing.ButtonGroup grupoTipoDeContacto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lCategoria;
    private javax.swing.JLabel lCodigo;
    private javax.swing.JLabel lCorreo;
    private javax.swing.JLabel lCubiculo;
    private javax.swing.JLabel lCurp;
    private javax.swing.JLabel lDiaDeNacimiento;
    private javax.swing.JLabel lDomicilio;
    private javax.swing.JLabel lEstadoCivil;
    private javax.swing.JLabel lHorario;
    private javax.swing.JLabel lHorario2;
    private javax.swing.JLabel lIndicadorMaterias;
    private javax.swing.JLabel lIndicadorMateriasP;
    private javax.swing.JLabel lMateria;
    private javax.swing.JLabel lMaterias;
    private javax.swing.JLabel lMesDeNacimiento;
    private javax.swing.JLabel lNombre;
    private javax.swing.JLabel lNss;
    private javax.swing.JLabel lOficina;
    private javax.swing.JLabel lPago;
    private javax.swing.JLabel lProfesion;
    private javax.swing.JLabel lPromedio;
    private javax.swing.JLabel lPuesto;
    private javax.swing.JLabel lRfc;
    private javax.swing.JLabel lSalon;
    private javax.swing.JLabel lSexo;
    private javax.swing.JLabel lSueldo;
    private javax.swing.JLabel lTelefono;
    private javax.swing.JLabel lYearDeNacimiento;
    private javax.swing.JButton nCancelar;
    private javax.swing.JPanel pAtributosAlumno;
    private javax.swing.JPanel pAtributosIntendente;
    private javax.swing.JPanel pAtributosPersona;
    private javax.swing.JPanel pAtributosProfesor;
    private javax.swing.JPanel pAtributosSecretaria;
    private javax.swing.JPanel pAtributosTrabajador;
    private javax.swing.JPanel pModular;
    // End of variables declaration//GEN-END:variables
}
