/*
 * ActividadDeProgramación = "MultiApp"
 * Descripción =⠀"Reutilizar clases creadas a lo largo del semestre para integrarlos en una interfaz grafica"⠀⠀
 * Nombre = "Fernando Samuel Razón Gómez"
 * OtrosDatos = "UDG - Cualtos - ICOM - POO - Profesor Sergio"
 * ⠀⠀⠀⠀⠀⠀⠀⠀⡤⢲⠞⢉⡽⠲⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 *⠀⠀⠀⠀⠀⠀⠀⣼⣰⡇⢀⡎⠀⣠⣼⣷⣄⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀
 *⠀⠀⠀⠀⠀⠀⠀⣿⣿⣷⣿⣀⣀⡼⢉⣿⣿⣷⣶⣶⠖⠈⠉⠚⠛⠣⣀⠀⠀⠀
 *⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣌⣉⣠⣾⣿⣿⣿⣿⠇⠀⠀⣀⡀⠀⠀⠀⠑⢤⣄
 *⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⡿⢟⣿⣿⣿⣿⠀⠀⠀⠻⣯⠆⠀⠀⠀⠈⡇
 *⠀⠀⠀⠀⠀⠀⠀⠀⢠⠞⣿⣿⣷⣿⣿⣿⣿⣿⣿⡄⠀⠀⡀⣠⡈⠀⣤⢄⠀⢠
 *⠀⠀⠀⠀⠀⠀⢀⡴⠃⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠳⣸⠷⠄⠲⠾⢇⠆
 *⠀⠀⠀⠀⠀⣠⠞⠀⠀⠀⠀⠈⠛⠿⣿⣿⣿⣿⣿⣿⣷⣤⣀⠀⠀⢀⡠⠐⠁⠀
 *⠀⠀⠀⢀⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠿⣿⣿⣿⢿⣿⣿⣖⣂⠀⠀⠀
 *⠀⠀⢀⢶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⣿⠉⡇⢹⣸⠀⠀⠀
 *⠀⡠⠙⣻⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠿⠿⠚⠛⠋⠁⠀⠀⠀
 *⣸⡆⠀⢣⣳⡀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⡖⠲⠆⣺⣁⡀⣠⣴⣲⠒⣦⠀⠀⠀
 *⢿⣿⡀⠀⠙⠺⠗⣶⣢⣔⣲⣲⠯⠟⠊⠀⣦⣾⡿⠁⣴⢡⡟⠉⠉⠙⠤⠆⠀⠀
 *⠈⢿⣿⣦⡀⢀⣤⣤⣀⣀⠀⠀⠀⠀⢠⣾⣿⣿⡇⠀⣧⢸⡄⠀⠀⠀⡼⠃⠀⠀
 *⠀⠈⠛⠛⠚⠁⠀⠀⠀⠉⠉⠙⠒⠢⠽⢿⣿⣿⣷⡀⢻⣦⡙⠲⠶⠛⠁⠀⠀⠀
 */
package multiapp;

import Librerias.*;
import java.awt.event.ItemEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

/**
 *
 * @author samue
 */
public class MultiApp extends javax.swing.JFrame {
    private String [] datosTabla = new String[4]; //Fila de tabla
    private ArrayList<Persona> listaContactos; //Lista de contactos
    private Persona seleccion; //Contacto seleccionado
    private String simbolo; //Operador de la calculadora
    
    
    // Referencia estática a la instancia de MultiApp
    public static MultiApp multiApp;
    
    //Objetos para las aplicaciones
    Calculadora calculadora = new Calculadora();
    Unidades medidas = new Unidades();
    Temperatura temperatura = new Temperatura();
    BasesNumericas bases = new BasesNumericas();
    Contador contador = new Contador();
    
    ClassLoader classLoader = getClass().getClassLoader();
    
    /**
     * Creates new form MultiApp
     */
    public MultiApp() {
        initComponents();
        listaContactos = cargarContactos(); //Cargar contactos del disco
        setLocationRelativeTo(null); //Centrar ventana
        multiApp = this; // Asignar la instancia actual a la referencia estática
        pModular.setLayout(new BoxLayout(pModular, BoxLayout.Y_AXIS)); // Asignar Layot "modular"

        
        //Colocar icono
        setIconImage(new ImageIcon(getClass().getResource("herramienta.png")).getImage());
        simbolo = "";//Inicializar variable simbolo para calculadora
        
        bCuadrado.setSelected(false);
        bCuadrado.setSelected(true);
        
        //Colocar document listener para permitir solo X caracteres
        cDato1.setDocument(createPlainDocument(20));
        cDato2.setDocument(createPlainDocument(20));
        cDato3.setDocument(createPlainDocument(20));
        cDato4.setDocument(createPlainDocument(20));
        campoEntradaUnidades.setDocument(createPlainDocument(20)); //Perimitir solo numeros con punto
        campoEntradaTemp.setDocument(createPlainDocumentNumNegativo(22));//Permitir solo numeros con punto y negativos
        campoEntradaBases.setDocument(createPlainDocumentCurp(20)); //Perimitir solo numeros
        
        //Actualizar tabla
        actualizarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoFiguras = new javax.swing.ButtonGroup();
        pDato1 = new javax.swing.JPanel();
        lDato1 = new javax.swing.JLabel();
        cDato1 = new javax.swing.JTextField();
        pDato2 = new javax.swing.JPanel();
        lDato2 = new javax.swing.JLabel();
        cDato2 = new javax.swing.JTextField();
        pDato3 = new javax.swing.JPanel();
        lDato3 = new javax.swing.JLabel();
        cDato3 = new javax.swing.JTextField();
        pDato4 = new javax.swing.JPanel();
        lDato4 = new javax.swing.JLabel();
        cDato4 = new javax.swing.JTextField();
        pSalida = new javax.swing.JPanel();
        lArea = new javax.swing.JLabel();
        cArea = new javax.swing.JTextField();
        lPerimetro = new javax.swing.JLabel();
        cPerimetro = new javax.swing.JTextField();
        selector = new javax.swing.JTabbedPane();
        pFiguras = new javax.swing.JPanel();
        SelectorFiguras = new javax.swing.JPanel();
        selectorFiguras = new javax.swing.JTabbedPane();
        pCuadrilateros = new javax.swing.JPanel();
        bCuadrado = new javax.swing.JToggleButton();
        bRectangulo = new javax.swing.JToggleButton();
        pTriangulos = new javax.swing.JPanel();
        bEquilatero = new javax.swing.JToggleButton();
        bIsoseles = new javax.swing.JToggleButton();
        bEscaleno = new javax.swing.JToggleButton();
        jPanel6 = new javax.swing.JPanel();
        bCirculo = new javax.swing.JToggleButton();
        bElipse = new javax.swing.JToggleButton();
        pPoligonos = new javax.swing.JPanel();
        bPoligono = new javax.swing.JToggleButton();
        jPanel8 = new javax.swing.JPanel();
        ImagenFigura = new javax.swing.JLabel();
        calcularFG = new javax.swing.JButton();
        lNombreFigura = new javax.swing.JLabel();
        pModular = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        contenedorConversorUnidades = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        campoEntradaUnidades = new javax.swing.JTextField();
        selectorMedidasEntrada = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        campoSalidaUnidades = new javax.swing.JTextField();
        selectorMedidasSalida = new javax.swing.JComboBox<>();
        calcularUnidades = new javax.swing.JButton();
        pConversorTemperatura = new javax.swing.JPanel();
        contenerdorTemperatura = new javax.swing.JPanel();
        etiquetaTempEntrada = new javax.swing.JLabel();
        campoEntradaTemp = new javax.swing.JTextField();
        selectorTempEntrada = new javax.swing.JComboBox<>();
        etiqeutaTempSalida = new javax.swing.JLabel();
        campoSalidaTemp = new javax.swing.JTextField();
        selectorTempSalida = new javax.swing.JComboBox<>();
        bCalcularTemperatura = new javax.swing.JButton();
        pBases = new javax.swing.JPanel();
        contenedorConversorUnidades1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        campoEntradaBases = new javax.swing.JTextField();
        selectorBasesEntrada = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        campoSalidaBases = new javax.swing.JTextField();
        selectorBasesSalida = new javax.swing.JComboBox<>();
        calcularUnidadades1 = new javax.swing.JButton();
        pContador = new javax.swing.JPanel();
        pContenedorContador = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bSumar = new javax.swing.JButton();
        bRestar = new javax.swing.JButton();
        campoContador = new javax.swing.JTextField();
        bReinciar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaContactos = new javax.swing.JTable();
        bNuevoContacto = new javax.swing.JButton();
        bVerContacto = new javax.swing.JButton();
        bEliminarContacto = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        b0 = new javax.swing.JButton();
        bRaiz = new javax.swing.JButton();
        bReset = new javax.swing.JButton();
        bSuma = new javax.swing.JButton();
        bResta = new javax.swing.JButton();
        bMultiplicacion = new javax.swing.JButton();
        bPotencia = new javax.swing.JButton();
        bDivision = new javax.swing.JButton();
        bResultado = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        bPunto = new javax.swing.JButton();
        pantallaCalculadora = new javax.swing.JTextField();
        pantallaMemoria = new javax.swing.JTextField();

        lDato1.setText("Lado");

        javax.swing.GroupLayout pDato1Layout = new javax.swing.GroupLayout(pDato1);
        pDato1.setLayout(pDato1Layout);
        pDato1Layout.setHorizontalGroup(
            pDato1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDato1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pDato1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pDato1Layout.createSequentialGroup()
                        .addComponent(lDato1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cDato1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                .addContainerGap())
        );
        pDato1Layout.setVerticalGroup(
            pDato1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDato1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lDato1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cDato1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lDato2.setText("Lado");

        javax.swing.GroupLayout pDato2Layout = new javax.swing.GroupLayout(pDato2);
        pDato2.setLayout(pDato2Layout);
        pDato2Layout.setHorizontalGroup(
            pDato2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDato2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pDato2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pDato2Layout.createSequentialGroup()
                        .addComponent(lDato2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cDato2, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                .addContainerGap())
        );
        pDato2Layout.setVerticalGroup(
            pDato2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDato2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lDato2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cDato2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lDato3.setText("Lado");

        javax.swing.GroupLayout pDato3Layout = new javax.swing.GroupLayout(pDato3);
        pDato3.setLayout(pDato3Layout);
        pDato3Layout.setHorizontalGroup(
            pDato3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDato3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pDato3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pDato3Layout.createSequentialGroup()
                        .addComponent(lDato3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cDato3, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                .addContainerGap())
        );
        pDato3Layout.setVerticalGroup(
            pDato3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDato3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lDato3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cDato3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lDato4.setText("Lado");

        javax.swing.GroupLayout pDato4Layout = new javax.swing.GroupLayout(pDato4);
        pDato4.setLayout(pDato4Layout);
        pDato4Layout.setHorizontalGroup(
            pDato4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDato4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pDato4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pDato4Layout.createSequentialGroup()
                        .addComponent(lDato4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cDato4, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                .addContainerGap())
        );
        pDato4Layout.setVerticalGroup(
            pDato4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDato4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lDato4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cDato4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lArea.setText("Area");

        cArea.setEditable(false);

        lPerimetro.setText("Perimetro");

        cPerimetro.setEditable(false);

        javax.swing.GroupLayout pSalidaLayout = new javax.swing.GroupLayout(pSalida);
        pSalida.setLayout(pSalidaLayout);
        pSalidaLayout.setHorizontalGroup(
            pSalidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSalidaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pSalidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cArea, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(cPerimetro, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addGroup(pSalidaLayout.createSequentialGroup()
                        .addGroup(pSalidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lArea)
                            .addComponent(lPerimetro))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pSalidaLayout.setVerticalGroup(
            pSalidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSalidaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lArea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lPerimetro)
                .addGap(0, 0, 0)
                .addComponent(cPerimetro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("MultiApp");
        setIconImages(null);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        selectorFiguras.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        selectorFiguras.setToolTipText("");

        grupoFiguras.add(bCuadrado);
        bCuadrado.setText("Cuadrado");
        bCuadrado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bCuadradoItemStateChanged(evt);
            }
        });
        bCuadrado.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                bCuadradoCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        bCuadrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCuadradoActionPerformed(evt);
            }
        });

        grupoFiguras.add(bRectangulo);
        bRectangulo.setText("Rectángulo");
        bRectangulo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bRectanguloItemStateChanged(evt);
            }
        });
        bRectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRectanguloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pCuadrilaterosLayout = new javax.swing.GroupLayout(pCuadrilateros);
        pCuadrilateros.setLayout(pCuadrilaterosLayout);
        pCuadrilaterosLayout.setHorizontalGroup(
            pCuadrilaterosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCuadrilaterosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bCuadrado, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bRectangulo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pCuadrilaterosLayout.setVerticalGroup(
            pCuadrilaterosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCuadrilaterosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pCuadrilaterosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCuadrado)
                    .addComponent(bRectangulo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        selectorFiguras.addTab("Cuadriláteros", pCuadrilateros);

        grupoFiguras.add(bEquilatero);
        bEquilatero.setText("Equilatero");
        bEquilatero.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bEquilateroItemStateChanged(evt);
            }
        });

        grupoFiguras.add(bIsoseles);
        bIsoseles.setText("Isósceles");
        bIsoseles.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bIsoselesItemStateChanged(evt);
            }
        });

        grupoFiguras.add(bEscaleno);
        bEscaleno.setText("Escaleno");
        bEscaleno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bEscalenoItemStateChanged(evt);
            }
        });
        bEscaleno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEscalenoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pTriangulosLayout = new javax.swing.GroupLayout(pTriangulos);
        pTriangulos.setLayout(pTriangulosLayout);
        pTriangulosLayout.setHorizontalGroup(
            pTriangulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTriangulosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bEquilatero, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bIsoseles, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bEscaleno, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pTriangulosLayout.setVerticalGroup(
            pTriangulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTriangulosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pTriangulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bEquilatero)
                    .addComponent(bIsoseles)
                    .addComponent(bEscaleno))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        selectorFiguras.addTab("Triángulos", pTriangulos);

        grupoFiguras.add(bCirculo);
        bCirculo.setText("Circulo");
        bCirculo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bCirculoItemStateChanged(evt);
            }
        });

        grupoFiguras.add(bElipse);
        bElipse.setText("Elipse");
        bElipse.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bElipseItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bCirculo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bElipse, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(480, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCirculo)
                    .addComponent(bElipse))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        selectorFiguras.addTab("Circulos", jPanel6);

        pPoligonos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        grupoFiguras.add(bPoligono);
        bPoligono.setText("Polígono Regular");
        bPoligono.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bPoligonoItemStateChanged(evt);
            }
        });
        bPoligono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPoligonoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pPoligonosLayout = new javax.swing.GroupLayout(pPoligonos);
        pPoligonos.setLayout(pPoligonosLayout);
        pPoligonosLayout.setHorizontalGroup(
            pPoligonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPoligonosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bPoligono, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(583, Short.MAX_VALUE))
        );
        pPoligonosLayout.setVerticalGroup(
            pPoligonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPoligonosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bPoligono)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        selectorFiguras.addTab("Polígonos", pPoligonos);

        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ImagenFigura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/multiapp/isosceles.png"))); // NOI18N
        ImagenFigura.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ImagenFigura.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/multiapp/circulo.png"))); // NOI18N

        calcularFG.setText("Calcular");
        calcularFG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularFGActionPerformed(evt);
            }
        });

        lNombreFigura.setText("Cuadrado");

        javax.swing.GroupLayout pModularLayout = new javax.swing.GroupLayout(pModular);
        pModular.setLayout(pModularLayout);
        pModularLayout.setHorizontalGroup(
            pModularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pModularLayout.setVerticalGroup(
            pModularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 323, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lNombreFigura, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ImagenFigura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pModular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 114, Short.MAX_VALUE)
                        .addComponent(calcularFG)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(pModular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(calcularFG))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(lNombreFigura)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ImagenFigura)))
                .addContainerGap())
        );

        javax.swing.GroupLayout SelectorFigurasLayout = new javax.swing.GroupLayout(SelectorFiguras);
        SelectorFiguras.setLayout(SelectorFigurasLayout);
        SelectorFigurasLayout.setHorizontalGroup(
            SelectorFigurasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SelectorFigurasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectorFiguras)
                .addContainerGap())
            .addGroup(SelectorFigurasLayout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SelectorFigurasLayout.setVerticalGroup(
            SelectorFigurasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SelectorFigurasLayout.createSequentialGroup()
                .addComponent(selectorFiguras, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 89, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pFigurasLayout = new javax.swing.GroupLayout(pFiguras);
        pFiguras.setLayout(pFigurasLayout);
        pFigurasLayout.setHorizontalGroup(
            pFigurasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pFigurasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SelectorFiguras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pFigurasLayout.setVerticalGroup(
            pFigurasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pFigurasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SelectorFiguras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        selector.addTab("Figuras Geometricas", pFiguras);

        contenedorConversorUnidades.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Medida Original");

        campoEntradaUnidades.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoEntradaUnidadesKeyTyped(evt);
            }
        });

        selectorMedidasEntrada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "centimetros", "metros", "kilometros", "pulgadas", "yardas", "millas" }));
        selectorMedidasEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorMedidasEntradaActionPerformed(evt);
            }
        });

        jLabel3.setText("Medida convertida:");

        campoSalidaUnidades.setEditable(false);

        selectorMedidasSalida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "centimetros", "metros", "kilometros", "pulgadas", "yardas", "millas" }));
        selectorMedidasSalida.setSelectedIndex(2);
        selectorMedidasSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorMedidasSalidaActionPerformed(evt);
            }
        });

        calcularUnidades.setText("Calcular");
        calcularUnidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularUnidadesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contenedorConversorUnidadesLayout = new javax.swing.GroupLayout(contenedorConversorUnidades);
        contenedorConversorUnidades.setLayout(contenedorConversorUnidadesLayout);
        contenedorConversorUnidadesLayout.setHorizontalGroup(
            contenedorConversorUnidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorConversorUnidadesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contenedorConversorUnidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contenedorConversorUnidadesLayout.createSequentialGroup()
                        .addGroup(contenedorConversorUnidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campoSalidaUnidades, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campoEntradaUnidades, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(contenedorConversorUnidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectorMedidasEntrada, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectorMedidasSalida, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contenedorConversorUnidadesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(calcularUnidades)))
                .addContainerGap())
        );
        contenedorConversorUnidadesLayout.setVerticalGroup(
            contenedorConversorUnidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorConversorUnidadesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contenedorConversorUnidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoEntradaUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectorMedidasEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contenedorConversorUnidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoSalidaUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectorMedidasSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(calcularUnidades)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(276, 276, 276)
                .addComponent(contenedorConversorUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(256, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(contenedorConversorUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(207, Short.MAX_VALUE))
        );

        selector.addTab("Conversor medidas", jPanel3);

        contenerdorTemperatura.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        etiquetaTempEntrada.setText("Temperatura original");

        selectorTempEntrada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C", "F", "K" }));
        selectorTempEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorTempEntradaActionPerformed(evt);
            }
        });

        etiqeutaTempSalida.setText("Temperatura salida");

        campoSalidaTemp.setEditable(false);

        selectorTempSalida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C", "F", "K" }));
        selectorTempSalida.setSelectedIndex(1);
        selectorTempSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorTempSalidaActionPerformed(evt);
            }
        });

        bCalcularTemperatura.setText("Calcular");
        bCalcularTemperatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCalcularTemperaturaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contenerdorTemperaturaLayout = new javax.swing.GroupLayout(contenerdorTemperatura);
        contenerdorTemperatura.setLayout(contenerdorTemperaturaLayout);
        contenerdorTemperaturaLayout.setHorizontalGroup(
            contenerdorTemperaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenerdorTemperaturaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contenerdorTemperaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contenerdorTemperaturaLayout.createSequentialGroup()
                        .addGroup(contenerdorTemperaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(campoSalidaTemp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(campoEntradaTemp, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(contenerdorTemperaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectorTempSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectorTempEntrada, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(etiquetaTempEntrada)
                    .addComponent(etiqeutaTempSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contenerdorTemperaturaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bCalcularTemperatura)
                .addContainerGap())
        );
        contenerdorTemperaturaLayout.setVerticalGroup(
            contenerdorTemperaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenerdorTemperaturaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiquetaTempEntrada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contenerdorTemperaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoEntradaTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectorTempEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiqeutaTempSalida)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contenerdorTemperaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoSalidaTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectorTempSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bCalcularTemperatura)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pConversorTemperaturaLayout = new javax.swing.GroupLayout(pConversorTemperatura);
        pConversorTemperatura.setLayout(pConversorTemperaturaLayout);
        pConversorTemperaturaLayout.setHorizontalGroup(
            pConversorTemperaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pConversorTemperaturaLayout.createSequentialGroup()
                .addGap(276, 276, 276)
                .addComponent(contenerdorTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(288, Short.MAX_VALUE))
        );
        pConversorTemperaturaLayout.setVerticalGroup(
            pConversorTemperaturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pConversorTemperaturaLayout.createSequentialGroup()
                .addGap(219, 219, 219)
                .addComponent(contenerdorTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(209, Short.MAX_VALUE))
        );

        selector.addTab("Conversor temperatura", pConversorTemperatura);

        contenedorConversorUnidades1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setText("Unidad Original");

        campoEntradaBases.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoEntradaBasesKeyTyped(evt);
            }
        });

        selectorBasesEntrada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Binario", "Octal", "Decimal", "Hexadecimal" }));
        selectorBasesEntrada.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectorBasesEntradaItemStateChanged(evt);
            }
        });
        selectorBasesEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorBasesEntradaActionPerformed(evt);
            }
        });

        jLabel8.setText("Unidad Salida");

        campoSalidaBases.setEditable(false);

        selectorBasesSalida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Binario", "Octal", "Decimal", "Hexadecimal" }));
        selectorBasesSalida.setSelectedIndex(2);
        selectorBasesSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorBasesSalidaActionPerformed(evt);
            }
        });

        calcularUnidadades1.setText("Calcular");
        calcularUnidadades1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularUnidadades1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contenedorConversorUnidades1Layout = new javax.swing.GroupLayout(contenedorConversorUnidades1);
        contenedorConversorUnidades1.setLayout(contenedorConversorUnidades1Layout);
        contenedorConversorUnidades1Layout.setHorizontalGroup(
            contenedorConversorUnidades1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorConversorUnidades1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contenedorConversorUnidades1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contenedorConversorUnidades1Layout.createSequentialGroup()
                        .addGroup(contenedorConversorUnidades1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campoSalidaBases, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(campoEntradaBases, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(contenedorConversorUnidades1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectorBasesEntrada, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectorBasesSalida, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contenedorConversorUnidades1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(calcularUnidadades1)))
                .addContainerGap())
        );
        contenedorConversorUnidades1Layout.setVerticalGroup(
            contenedorConversorUnidades1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorConversorUnidades1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contenedorConversorUnidades1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoEntradaBases, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectorBasesEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contenedorConversorUnidades1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoSalidaBases, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectorBasesSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(calcularUnidadades1)
                .addContainerGap())
        );

        javax.swing.GroupLayout pBasesLayout = new javax.swing.GroupLayout(pBases);
        pBases.setLayout(pBasesLayout);
        pBasesLayout.setHorizontalGroup(
            pBasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pBasesLayout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addComponent(contenedorConversorUnidades1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(273, Short.MAX_VALUE))
        );
        pBasesLayout.setVerticalGroup(
            pBasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pBasesLayout.createSequentialGroup()
                .addGap(205, 205, 205)
                .addComponent(contenedorConversorUnidades1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(223, Short.MAX_VALUE))
        );

        selector.addTab("Conversor Bases", pBases);

        pContenedorContador.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("CONTADOR");

        bSumar.setText("Sumar");
        bSumar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSumarActionPerformed(evt);
            }
        });

        bRestar.setText("Restar");
        bRestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRestarActionPerformed(evt);
            }
        });

        campoContador.setEditable(false);
        campoContador.setText("0");
        campoContador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoContadorActionPerformed(evt);
            }
        });

        bReinciar.setText("Reiniciar");
        bReinciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bReinciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pContenedorContadorLayout = new javax.swing.GroupLayout(pContenedorContador);
        pContenedorContador.setLayout(pContenedorContadorLayout);
        pContenedorContadorLayout.setHorizontalGroup(
            pContenedorContadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pContenedorContadorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pContenedorContadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bSumar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bRestar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bReinciar))
                .addGroup(pContenedorContadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pContenedorContadorLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pContenedorContadorLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(campoContador, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pContenedorContadorLayout.setVerticalGroup(
            pContenedorContadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pContenedorContadorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pContenedorContadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSumar)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pContenedorContadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bRestar)
                    .addComponent(campoContador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bReinciar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pContadorLayout = new javax.swing.GroupLayout(pContador);
        pContador.setLayout(pContadorLayout);
        pContadorLayout.setHorizontalGroup(
            pContadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pContadorLayout.createSequentialGroup()
                .addContainerGap(256, Short.MAX_VALUE)
                .addComponent(pContenedorContador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(235, 235, 235))
        );
        pContadorLayout.setVerticalGroup(
            pContadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pContadorLayout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(pContenedorContador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(234, Short.MAX_VALUE))
        );

        selector.addTab("Contador", pContador);

        tablaContactos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Telefono", "Codigo", "Ocupación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaContactos);

        bNuevoContacto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/multiapp/new-user.png"))); // NOI18N
        bNuevoContacto.setText("Nuevo contacto");
        bNuevoContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNuevoContactoActionPerformed(evt);
            }
        });

        bVerContacto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/multiapp/contact.png"))); // NOI18N
        bVerContacto.setText("Ver contacto");
        bVerContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVerContactoActionPerformed(evt);
            }
        });

        bEliminarContacto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/multiapp/delete contact.png"))); // NOI18N
        bEliminarContacto.setText("Eliminar Contacto");
        bEliminarContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarContactoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bNuevoContacto, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                    .addComponent(bVerContacto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bEliminarContacto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(bNuevoContacto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bVerContacto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bEliminarContacto)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE))
                .addContainerGap())
        );

        selector.addTab("Agenda", jPanel2);

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        b1.setMnemonic('1');
        b1.setText("1");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b2.setMnemonic('2');
        b2.setText("2");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b3.setMnemonic('3');
        b3.setText("3");
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b4.setMnemonic('4');
        b4.setText("4");
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b5.setMnemonic('5');
        b5.setText("5");
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b6.setMnemonic('6');
        b6.setText("6");
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        b7.setMnemonic('7');
        b7.setText("7");
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        b9.setMnemonic('9');
        b9.setText("9");
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        b0.setMnemonic('0');
        b0.setText("0");
        b0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b0ActionPerformed(evt);
            }
        });

        bRaiz.setText("√");
        bRaiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRaizActionPerformed(evt);
            }
        });

        bReset.setText("c");
        bReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetActionPerformed(evt);
            }
        });

        bSuma.setText("+");
        bSuma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSumaActionPerformed(evt);
            }
        });

        bResta.setText("-");
        bResta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRestaActionPerformed(evt);
            }
        });

        bMultiplicacion.setText("*");
        bMultiplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMultiplicacionActionPerformed(evt);
            }
        });

        bPotencia.setText("^");
        bPotencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPotenciaActionPerformed(evt);
            }
        });

        bDivision.setText("/");
        bDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDivisionActionPerformed(evt);
            }
        });

        bResultado.setText("=");
        bResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResultadoActionPerformed(evt);
            }
        });

        b8.setMnemonic('8');
        b8.setText("8");
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        bPunto.setText(".");
        bPunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPuntoActionPerformed(evt);
            }
        });

        pantallaCalculadora.setEditable(false);
        pantallaCalculadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pantallaCalculadoraActionPerformed(evt);
            }
        });

        pantallaMemoria.setEditable(false);
        pantallaMemoria.setToolTipText("");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(b1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b3))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(b7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(b4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b6))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(b0, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bPunto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bRaiz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(bReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bPotencia))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                            .addComponent(bSuma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(bMultiplicacion))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                            .addComponent(bResta)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(bDivision)))))))
                    .addComponent(pantallaCalculadora, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pantallaMemoria))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pantallaMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pantallaCalculadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b1)
                    .addComponent(b2)
                    .addComponent(b3)
                    .addComponent(bReset)
                    .addComponent(bPotencia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b4)
                    .addComponent(b5)
                    .addComponent(b6)
                    .addComponent(bSuma)
                    .addComponent(bMultiplicacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b7)
                    .addComponent(b9)
                    .addComponent(bResta)
                    .addComponent(bDivision)
                    .addComponent(b8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b0, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bRaiz)
                        .addComponent(bResultado)
                        .addComponent(bPunto)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(287, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(276, 276, 276))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(195, Short.MAX_VALUE))
        );

        selector.addTab("Calculadora", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(selector, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(selector, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoContadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoContadorActionPerformed

    }//GEN-LAST:event_campoContadorActionPerformed

    private void bCuadradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCuadradoActionPerformed

    }//GEN-LAST:event_bCuadradoActionPerformed

    private void bRectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRectanguloActionPerformed

    }//GEN-LAST:event_bRectanguloActionPerformed

    private void bEscalenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEscalenoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bEscalenoActionPerformed

    /**
     * Calcular area y perimetro de figuras geometricas
     * @param evt 
     */
    private void calcularFGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularFGActionPerformed
        try{
            switch(lNombreFigura.getText()){
                case "Cuadrado" -> {
                    Cuadrado figura = new Cuadrado(Float.parseFloat(cDato1.getText()));
                    cArea.setText(Float.toString(figura.getArea()));
                    cPerimetro.setText(Float.toString(figura.getPerimetro()));
                }
                case "Rectangulo" -> {
                    Rectangulo figura = new Rectangulo(Float.parseFloat(cDato1.getText()),
                            Float.parseFloat(cDato2.getText()));
                    cArea.setText(Float.toString(figura.getArea()));
                    cPerimetro.setText(Float.toString(figura.getPerimetro()));
                }
                case "Equilatero"-> {
                    Equilatero figura = new Equilatero();
                    figura.setLado1(Float.parseFloat(cDato1.getText()));
                    cDato4.setEnabled(true);
                    String altura = Float.toString(figura.getAltura());
                    cDato4.setText(altura);
                    System.out.println(Float.toString(figura.getAltura()));

                    cDato4.setEnabled(false);
                    cArea.setText(Float.toString(figura.getArea()));

                    cPerimetro.setText(Float.toString(figura.getPerimetro()));
                }
                case "Isosceles" -> {
                    Isosceles figura = new Isosceles(Float.parseFloat(cDato1.getText()),
                                    Float.parseFloat(cDato2.getText()),
                                    Float.parseFloat(cDato4.getText()));
                    cArea.setText(Float.toString(figura.getArea()));
                    cPerimetro.setText(Float.toString(figura.getPerimetro()));
                }
                case "Escaleno" -> {
                    Escaleno figura = new Escaleno(Float.parseFloat(cDato1.getText()),
                                    Float.parseFloat(cDato2.getText()),
                                    Float.parseFloat(cDato3.getText()),
                                    Float.parseFloat(cDato4.getText()));
                    cArea.setText(Float.toString(figura.getArea()));
                    cPerimetro.setText(Float.toString(figura.getPerimetro()));
                }
                case "Circulo" -> {
                    Circulo figura = new Circulo(Float.parseFloat(cDato1.getText()));
                    cArea.setText(Float.toString(figura.getArea()));
                    cPerimetro.setText(Float.toString(figura.getPerimetro()));
                }
                case "Elipse" -> {
                    Elipse figura = new Elipse(Float.parseFloat(cDato1.getText()),
                                    Float.parseFloat(cDato2.getText()));
                    cArea.setText(Float.toString(figura.getArea()));
                    cPerimetro.setText(Float.toString(figura.getPerimetro()));
                    
                }
                case "Poligono" -> {
                    Poligono figura = new Poligono(Float.parseFloat(cDato1.getText()),
                                    Float.parseFloat(cDato2.getText()),
                                    Integer.parseInt(cDato4.getText()));
                    cArea.setText(Float.toString(figura.getArea()));
                    cPerimetro.setText(Float.toString(figura.getPerimetro()));
                }
            } //Fin switch
        }catch(Exception e){
            String mensaje = "Escribe en todos los campos para calcular el Area y Perimetro";
                    JOptionPane.showMessageDialog(null, mensaje, "ERROR", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_calcularFGActionPerformed

    private void selectorMedidasEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorMedidasEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectorMedidasEntradaActionPerformed

    private void selectorMedidasSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorMedidasSalidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectorMedidasSalidaActionPerformed

    private void selectorTempSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorTempSalidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectorTempSalidaActionPerformed

    private void selectorTempEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorTempEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectorTempEntradaActionPerformed

    private void selectorBasesEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorBasesEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectorBasesEntradaActionPerformed

    private void selectorBasesSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorBasesSalidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectorBasesSalidaActionPerformed
    //boton 1
    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        pantallaCalculadora.setText(pantallaCalculadora.getText() + "1");
    }//GEN-LAST:event_b1ActionPerformed
    //boton 0 
    private void b0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b0ActionPerformed
        pantallaCalculadora.setText(pantallaCalculadora.getText() + "0");
    }//GEN-LAST:event_b0ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null, "¿Deseas cerrar la ventana?",
                "Cerrar", JOptionPane.YES_NO_OPTION) == 0){
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing
    
    private void pantallaCalculadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pantallaCalculadoraActionPerformed
        pantallaCalculadora.setText(pantallaCalculadora.getText() + "0");
    }//GEN-LAST:event_pantallaCalculadoraActionPerformed
    //boton 2
    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        pantallaCalculadora.setText(pantallaCalculadora.getText() + "2");
    }//GEN-LAST:event_b2ActionPerformed
    //boton 3
    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        pantallaCalculadora.setText(pantallaCalculadora.getText() + "3");
    }//GEN-LAST:event_b3ActionPerformed
    //boton 4
    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        pantallaCalculadora.setText(pantallaCalculadora.getText() + "4");
    }//GEN-LAST:event_b4ActionPerformed
    //boton 5
    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
        pantallaCalculadora.setText(pantallaCalculadora.getText() + "5");
    }//GEN-LAST:event_b5ActionPerformed
    //boton 6
    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
        pantallaCalculadora.setText(pantallaCalculadora.getText() + "6");
    }//GEN-LAST:event_b6ActionPerformed
    //boton 7
    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
        pantallaCalculadora.setText(pantallaCalculadora.getText() + "7");
    }//GEN-LAST:event_b7ActionPerformed
    //boton 8
    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
        // TODO add your handling code here:
        pantallaCalculadora.setText(pantallaCalculadora.getText() + "8");
    }//GEN-LAST:event_b8ActionPerformed
    //boton 9
    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
        // TODO add your handling code here:
        pantallaCalculadora.setText(pantallaCalculadora.getText() + "9");
    }//GEN-LAST:event_b9ActionPerformed
    //BotonReset
    private void bResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetActionPerformed
        // TODO add your handling code here:
        calculadora.resetAcumulado();
        pantallaCalculadora.setText("");
        simbolo = "";
        actualizarPantalla("");
    }//GEN-LAST:event_bResetActionPerformed
    //Boton para punto decimal
    private void bPuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPuntoActionPerformed
        // TODO add your handling code here:
        if(!pantallaCalculadora.getText().contains("."))pantallaCalculadora.setText(pantallaCalculadora.getText() + ".");
    }//GEN-LAST:event_bPuntoActionPerformed
    //boton +
    private void bSumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSumaActionPerformed
        
        simbolo = "+";
        if(!pantallaCalculadora.getText().equals(""))calculadora.calcular(Double.parseDouble(pantallaCalculadora.getText()), simbolo);
        actualizarPantalla("");
    }//GEN-LAST:event_bSumaActionPerformed
    //Boton *
    private void bMultiplicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMultiplicacionActionPerformed
        if(calculadora.getAcumulado() == 0 && !pantallaCalculadora.getText().equals("")){//Si hay un 0 en memoria añadir lo que se tiene en la pantalla editable
            calculadora.calcular(Double.parseDouble(pantallaCalculadora.getText()), "+");
        }
        simbolo = "*";
        actualizarPantalla("");
    }//GEN-LAST:event_bMultiplicacionActionPerformed
    //Boton -
    private void bRestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRestaActionPerformed
        if(calculadora.getAcumulado() == 0 && !pantallaCalculadora.getText().equals("")){//Si hay un 0 en memoria añadir lo que se tiene en la pantalla editable
            calculadora.calcular(Double.parseDouble(pantallaCalculadora.getText()), "+");
        }
        simbolo = "-";
        if(!pantallaCalculadora.getText().equals(""))calculadora.calcular(Double.parseDouble(pantallaCalculadora.getText()), simbolo);
        actualizarPantalla("");
    }//GEN-LAST:event_bRestaActionPerformed
    //Boton /
    private void bDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDivisionActionPerformed
        if(calculadora.getAcumulado() == 0){//Si hay un 0 en memoria añadir lo que se tiene en la pantalla editable
            calculadora.calcular(Double.parseDouble(pantallaCalculadora.getText()), "+");
        }
        simbolo = "/";
        actualizarPantalla("");
    }//GEN-LAST:event_bDivisionActionPerformed
    //Boton =
    private void bResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResultadoActionPerformed
        if(pantallaCalculadora.getText().equals("")){
        }
        else if("".equals(simbolo)){
            calculadora.resetAcumulado();
            calculadora.calcular(Double.parseDouble(pantallaCalculadora.getText()), "+");
            actualizarPantalla("");
        }
        else{
            try{
                calculadora.calcular(Double.parseDouble(pantallaCalculadora.getText()), simbolo);
                simbolo = "";
                actualizarPantalla("");
            }catch(Exception e){ //Imprimir mensaje de error en caso de fallo
                JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_bResultadoActionPerformed
    //boton raiz
    private void bRaizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRaizActionPerformed
        if(calculadora.getAcumulado() == 0 && !pantallaCalculadora.getText().equals("")){//Si hay un 0 en memoria añadir lo que se tiene en la pantalla editable
            calculadora.calcular(Double.parseDouble(pantallaCalculadora.getText()), "+");
        }
        try{
            calculadora.calcular(0, "sqrt");
            simbolo = "";
            actualizarPantalla("");
        }catch(Exception e){ //Imprimir mensaje de error en caso de fallo
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "ERROR", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_bRaizActionPerformed
    //Boton potencia
    private void bPotenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPotenciaActionPerformed
        if(calculadora.getAcumulado() == 0 && !pantallaCalculadora.getText().equals("")){//Si hay un 0 en memoria añadir lo que se tiene en la pantalla editable
            calculadora.calcular(Double.parseDouble(pantallaCalculadora.getText()), "+");
        }
        simbolo = "^";
        actualizarPantalla("");
    }//GEN-LAST:event_bPotenciaActionPerformed
    //Boton calcular unidades
    private void calcularUnidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularUnidadesActionPerformed
        /*campoSalidaUnidades.setText(medidas.ConvertirMedidas(Double.parseDouble(campoEntradaUnidades.getText()), (String) selectorMedidasEntrada.getSelectedItem(), (String) selectorMedidasSalida.getSelectedItem()));*/
        
        double medidaEntrada = Double.parseDouble(campoEntradaUnidades.getText());
        String unidadEntrada = (String) selectorMedidasEntrada.getSelectedItem();
        String unidadSalida = (String) selectorMedidasSalida.getSelectedItem();
        float resultado = (float)medidas.ConvertirMedidas(medidaEntrada, unidadEntrada, unidadSalida);
        campoSalidaUnidades.setText(Float.toString(resultado));
    }//GEN-LAST:event_calcularUnidadesActionPerformed
    //Boton calcular temperatura
    private void bCalcularTemperaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCalcularTemperaturaActionPerformed
        float resultado = (float)temperatura.convertirTemperatura(Double.parseDouble(campoEntradaTemp.getText()),
                ((String)selectorTempEntrada.getSelectedItem()), ((String)selectorTempSalida.getSelectedItem()));
        campoSalidaTemp.setText(Float.toString(resultado));
    }//GEN-LAST:event_bCalcularTemperaturaActionPerformed
    //Boton suma a contador
    private void bSumarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSumarActionPerformed
        contador.incremento();
        campoContador.setText(Integer.toString(contador.mostrar()));
    }//GEN-LAST:event_bSumarActionPerformed
    //Boton resta a contador
    private void bRestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRestarActionPerformed
        contador.incremento(-1);
        campoContador.setText(Integer.toString(contador.mostrar()));
    }//GEN-LAST:event_bRestarActionPerformed
    //Boton para reiniciar contador
    private void bReinciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bReinciarActionPerformed
        contador.reiniciar();
        campoContador.setText(Integer.toString(contador.mostrar()));
    }//GEN-LAST:event_bReinciarActionPerformed
    /**
     * Calcular el cambio de bases numericas
     * @param evt Presionar boton calcular
     */
    private void calcularUnidadades1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularUnidadades1ActionPerformed
        int entrada = 0, salida = 0;
        
        //Revisar que la salida no este vacia
        if("".equals(campoEntradaBases.getText())){
            String mensaje = "Ingresa un numero para poder realizar el calculo";
            JOptionPane.showMessageDialog(null, mensaje,
                    "ERROR", JOptionPane.WARNING_MESSAGE);
        }
        
        switch((String)selectorBasesEntrada.getSelectedItem()){
            case "Binario" -> entrada = 2;
            case "Octal" -> entrada = 8;
            case "Decimal" -> entrada = 10;
            case "Hexadecimal" -> entrada = 16;
        }
        
        switch((String)selectorBasesSalida.getSelectedItem()){
            case "Binario" -> salida = 2;
            case "Octal" -> salida = 8;
            case "Decimal" -> salida = 10;
            case "Hexadecimal" -> salida = 16;
        }
        try{
        campoSalidaBases.setText(bases.convertirBase(campoEntradaBases.getText(),
                entrada, salida));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "ERROR", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_calcularUnidadades1ActionPerformed
    
    /**
     * Abrir ventana de nuevo contacto
     * @param evt Presionar boton de nuevo contacto
     */
    private void bNuevoContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNuevoContactoActionPerformed
        try {
        NuevoContacto nuevoContacto = NuevoContacto.getInstance();
        nuevoContacto.setVisible(true);
    } catch (Exception e) {
        e.printStackTrace();
    }
        
    }//GEN-LAST:event_bNuevoContactoActionPerformed

    /**
     * Abrir ventana MostraContacto con el contacto seleccionado en la tabla
     * @param evt 
     */
    private void bVerContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVerContactoActionPerformed
        int filaSeleccionada = tablaContactos.getSelectedRow();
        if (filaSeleccionada >= 0){
            seleccion = listaContactos.get(filaSeleccionada);
            MostrarContacto mostrarContacto = MostrarContacto.getInstance(seleccion);
            mostrarContacto.setVisible(true);
        } else {
            String mensaje = "Usa el clic para seleccionar una fila de la tabla, despues presiona este boton";
            JOptionPane.showMessageDialog(this, mensaje,
                    "ERROR", JOptionPane.WARNING_MESSAGE);
        }
            
        
    }//GEN-LAST:event_bVerContactoActionPerformed
    /**
     * Eliminar el contacto seleccionado en la tabla
     * @param evt 
     */
    private void bEliminarContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarContactoActionPerformed
        int filaSeleccionada = tablaContactos.getSelectedRow();
        
        if (filaSeleccionada >= 0){//Si hay una fila seleccionada
            if(JOptionPane.showConfirmDialog(null, "¿Deseas eliminar el contacto permanentemente?",
                    "Cerrar", JOptionPane.YES_NO_OPTION) == 0){//Menu de confirmación
                //Eliminar contacto de la lista y actualizar tabla
                listaContactos.remove(filaSeleccionada);
                actualizarTabla();
            }
            
        } else { //Instrucciones en caso de que no haya fila seleccionada
            String mensaje = "Usa el clic para seleccionar una fila de la tabla, despues presiona este boton";
            JOptionPane.showMessageDialog(this, mensaje,
                    "ERROR", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_bEliminarContactoActionPerformed

    private void bCuadradoCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_bCuadradoCaretPositionChanged
        
    }//GEN-LAST:event_bCuadradoCaretPositionChanged

    /**
     * Ajustar datos para cuadrado
     * @param evt 
     */
    private void bCuadradoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bCuadradoItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){//Si se selecciona
            //Colocar paneles
            pModular.removeAll();
            pModular.add(pDato1);
            pModular.add(pSalida);
            
            //Cambiar textos
            lDato1.setText("Lado");
            cDato1.setText("");
            cPerimetro.setText("");
            cArea.setText("");
            
            //Asignar figura
            lNombreFigura.setText("Cuadrado");
            
            //Asignar imagen
            ImagenFigura.setIcon(new ImageIcon(getClass().getResource("cuadrado.png")));
        }
    }//GEN-LAST:event_bCuadradoItemStateChanged

    /**
     * Ajustar datos para rectangulo
     * @param evt 
     */
    private void bRectanguloItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bRectanguloItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){ //Si se selecciona
            //Colocar paneles
            pModular.removeAll();
            pModular.add(pDato1);
            pModular.add(pDato2);
            pModular.add(pSalida);
            
            //Cambiar textos
            lDato1.setText("Lado 1");
            lDato2.setText("Lado 2");
            cDato1.setText("");
            cDato2.setText("");
            cPerimetro.setText("");
            cArea.setText("");
            
            //Asignar figura
            lNombreFigura.setText("Rectangulo");
            
            //Asignar imagen
            ImagenFigura.setIcon(new ImageIcon(getClass().getResource("rectangulo.png")));
        }
    }//GEN-LAST:event_bRectanguloItemStateChanged

    /**
     * Ajustar datos para equilatero
     * @param evt 
     */
    private void bEquilateroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bEquilateroItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){ //Si se selecciona
            //Colocar paneles
            pModular.removeAll();
            pModular.add(pDato1);
            pModular.add(pDato4);
            pModular.add(pSalida);
            
            //Cambiar textos
            lDato1.setText("Lado");
            lDato4.setText("Altura");
            cDato1.setText("");
            cDato4.setText("");
            cDato4.setEnabled(false);
            
            //Asignar figura
            lNombreFigura.setText("Equilatero");
            
            //Regresar documento a por defecto
            cDato4.setDocument(new PlainDocument());
            
            //Asignar imagen
            ImagenFigura.setIcon(new ImageIcon(getClass().getResource("equilatero.png")));
        } else{
            cDato4.setEnabled(true);
            cDato4.setDocument(createPlainDocument(20));
        }
    }//GEN-LAST:event_bEquilateroItemStateChanged
    
    /**
     * Ajustar datos para isosceles
     * @param evt 
     */
    private void bIsoselesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bIsoselesItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){ //Si se selecciona
            //Colocar paneles
            pModular.removeAll();
            pModular.add(pDato1);
            pModular.add(pDato2);
            pModular.add(pDato4);
            pModular.add(pSalida);
            
            //Cambiar textos
            lDato1.setText("Lado distinto (base)");
            lDato2.setText("Lados iguales");
            lDato4.setText("Altura");
            cDato1.setText("");
            cDato2.setText("");
            cDato4.setText("");
            cPerimetro.setText("");
            cArea.setText("");
            
            //Asignar figura
            lNombreFigura.setText("Isosceles");
            
            //Asignar imagen
            ImagenFigura.setIcon(new ImageIcon(getClass().getResource("isoscelesBien.png")));
            
        } 
    }//GEN-LAST:event_bIsoselesItemStateChanged

    /**
     * Ajustar datos para escaleno
     * @param evt 
     */
    private void bEscalenoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bEscalenoItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){ //Si se selecciona
            //Colocar paneles
            pModular.removeAll();
            pModular.add(pDato1);
            pModular.add(pDato2);
            pModular.add(pDato3);
            pModular.add(pDato4);
            pModular.add(pSalida);
            
            //Cambiar textos
            lDato1.setText("Lado 1 (base)");
            lDato2.setText("Lados 2");
            lDato3.setText("Lado 3");
            lDato4.setText("Altura");
            cDato1.setText("");
            cDato2.setText("");
            cDato3.setText("");
            cDato4.setText("");
            cPerimetro.setText("");
            cArea.setText("");
            
            //Asignar figura
            lNombreFigura.setText("Escaleno");
            
            //Asignar imagen
            ImagenFigura.setIcon(new ImageIcon(getClass().getResource("escaleno.png")));
        }
    }//GEN-LAST:event_bEscalenoItemStateChanged
    /**
     * Ajustar datos para circulo
     * @param evt 
     */
    private void bCirculoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bCirculoItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){ //Si se selecciona
            //Colocar paneles
            pModular.removeAll();
            pModular.add(pDato1);
            pModular.add(pSalida);
            
            //Cambiar textos
            lDato1.setText("Radio");
            cDato1.setText("");
            lPerimetro.setText ("Circunferencia");
            cPerimetro.setText("");
            cArea.setText("");
            
            //Asignar figura
            lNombreFigura.setText("Circulo");
            
            //Asignar imagen
            ImagenFigura.setIcon(new ImageIcon(getClass().getResource("circulo.png")));
            
        }else {
            lPerimetro.setText("Perímetro");
        }
    }//GEN-LAST:event_bCirculoItemStateChanged
    /**
     * Ajustar datos para elipse
     * @param evt 
     */
    private void bElipseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bElipseItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){ //Si se selecciona
            //Colocar paneles
            pModular.removeAll();
            pModular.add(pDato1);
            pModular.add(pDato2);
            pModular.add(pSalida);
            
            //Cambiar textos
            lDato1.setText("Radio 1");
            lDato2.setText("Radio 2");
            cDato1.setText("");
            cDato2.setText("");
            lPerimetro.setText ("Circunferencia");
            cPerimetro.setText("");
            cArea.setText("");
            
            //Asignar figura
            lNombreFigura.setText("Elipse");
            
            //Asignar imagen
            ImagenFigura.setIcon(new ImageIcon(getClass().getResource("elipse.png")));
            
        }else {
            lPerimetro.setText("Perimetro");
        }
    }//GEN-LAST:event_bElipseItemStateChanged

    /**
     * Ajustar datos al poligono
     * @param evt 
     */
    private void bPoligonoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bPoligonoItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){ //Si se selecciona
            //Colocar paneles
            pModular.removeAll();
            pModular.add(pDato1);
            pModular.add(pDato2);
            pModular.add(pDato4);
            pModular.add(pSalida);
            
            //Cambiar textos
            lDato1.setText("Lado");
            lDato4.setText("Número de lados");
            lDato2.setText("Apotema");
            cDato1.setText("");
            cDato2.setText("");
            cDato4.setText("");
            cPerimetro.setText("");
            cArea.setText("");
            
            
            //Asignar figura
            lNombreFigura.setText("Poligono");
            
            //Settear altura sin punto
            cDato4.setDocument(createPlainDocumentSinPunto(20));
            
            //Asignar imagen
            ImagenFigura.setIcon(new ImageIcon(getClass().getResource("poligono.png")));
        } else {
            //Regresar punto a altura
            cDato4.setDocument(createPlainDocument(20));
        }
    }//GEN-LAST:event_bPoligonoItemStateChanged

    private void bPoligonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPoligonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bPoligonoActionPerformed

    private void campoEntradaUnidadesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoEntradaUnidadesKeyTyped
        
    }//GEN-LAST:event_campoEntradaUnidadesKeyTyped
    /**
     * Evento que revisa las teclas introdocidas para solo permitir las que coincidan con el tipo de base
     * @param evt 
     */
    private void campoEntradaBasesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoEntradaBasesKeyTyped
        //Obtener caracter typeado
        char c = evt.getKeyChar();
        
        //Actuar segun el tipo de base seleccionada
        switch((String)selectorBasesEntrada.getSelectedItem()){
            case "Binario" -> { // Solo permitir numeros de 0 al 1
                if (!(c == '0' || c == '1')) {
                evt.consume();
                }
            }
            case "Octal" -> { // Solo permitir numeros de 0 al 7
                if (!Character.isDigit(c) || c < '0' || c > '7') {
                evt.consume();
                }
            }
            case "Decimal" -> { // Solo permitir numeros de 0 al 9
                if (!Character.isDigit(c)) {
                evt.consume();
                }   
            }
            case "Hexadecimal" -> { // Solo permitir numeros de 0 al 9 y letras de la a a la f
                if (!Character.isDigit(c) && !(c >= 'A' && c <= 'F') && !(c >= 'a' && c <= 'f')) {
                evt.consume();
                }
            }
        }
    }//GEN-LAST:event_campoEntradaBasesKeyTyped
    /**
     * Limpiar el campo de conversor de bases cada que se cambie el tipo de base
     * @param evt 
     */
    private void selectorBasesEntradaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectorBasesEntradaItemStateChanged
        campoEntradaBases.setText("");
        campoSalidaBases.setText("");
    }//GEN-LAST:event_selectorBasesEntradaItemStateChanged

    
    /**
     * Retornar contacto seleccionado
     * @return seleccion
     */
    public Persona getSeleccion(){
        return seleccion;
    }
    
    /**
     * Actualizar la pantalla de la calculadora
     * @param pantallaPrincipal  Texto a mostrar en la pantalla principal
     */
    private void actualizarPantalla(String pantallaPrincipal){
        pantallaCalculadora.setText(pantallaPrincipal);
        pantallaMemoria.setText(calculadora.getAcumulado().toString() + " " + simbolo);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MultiApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MultiApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MultiApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MultiApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MultiApp().setVisible(true);
            }
        });
    }
    
    /**
     * Document listener que evita que solo permite numeros con punto decimal
     * @return numeros con punto decimal
     */
    public static PlainDocument createPlainDocument(int limite) {
        return new PlainDocument() {
            @Override
            public void insertString(int offs, String str, AttributeSet a) throws BadLocationException {
                // Verificar si la cadena contiene solo números
                // Verificar si la longitud después de la inserción supera el límite
                if (str != null && (str.matches("[0-9]+") || (str.equals(".") && offs > 0 && 
                        getText(0, getLength()).matches("[0-9]+")))
                        &&((getLength() + str.length()) <= limite)) {
                        
                    
                    super.insertString(offs, str, a);
                }
                // Verificar si la longitud después de la inserción supera el límite
            }
        };
    }
    
    /**
     * Document listener que evita que solo permite numeros
     * @return numeros
     */
    public static PlainDocument createPlainDocumentSinPunto(int limite) {
        return new PlainDocument() {
            @Override
            public void insertString(int offs, String str, AttributeSet a) throws BadLocationException {
                // Verificar si la cadena contiene solo números
                if (str != null && str.matches("[0-9]+") && (getLength() + str.length()) <= limite) {
                    super.insertString(offs, str, a);
                }
                // Verificar si la longitud después de la inserción supera el límite
                
            }
        };
    }
    
    
    /**
     * Documento que adminte letras y espacios
     * @param limite maximo de caracteres
     * @return 
     */
    public static PlainDocument createPlainDocumentLetras(int limite) {
        return new PlainDocument() {
            @Override
            public void insertString(int offs, String str, AttributeSet a) throws BadLocationException {
                // Verificar si la cadena contiene solo números
                if (str != null && str.matches("[a-zA-ZñÑáéíóúÁÉÍÓÚüÜ.\\s]+") 
                && (getLength() + str.length()) <= limite) {
                    super.insertString(offs, str, a);
                }
                // Verificar si la longitud después de la inserción supera el límite
                
            }
        };
    }
    
    /**
     * Document que admite numeros de tal forma que sean utililes para un documento como curp
     * @param limite maximo de caracteres
     * @return 
     */
    public static PlainDocument createPlainDocumentCurp(int limite) {
        return new PlainDocument() {
            @Override
            public void insertString(int offs, String str, AttributeSet a) throws BadLocationException {
                //Convertir caracter a mayusculas
                str = str.toUpperCase();
                
                // Verificar si la cadena contiene solo números
                if (str != null && str.matches("[A-Z0-9]+") 
                && (getLength() + str.length()) <= limite) {
                    super.insertString(offs, str, a);
                }
                // Verificar si la longitud después de la inserción supera el límite
                
            }
        };
    }
    
    /**
     * Document que admite numeros negativos y con punto decimal
     * @param limite maximo de caracteres
     * @return 
     */
    public static PlainDocument createPlainDocumentNumNegativo(int limite) {
        return new PlainDocument() {
            @Override
            public void insertString(int offs, String str, AttributeSet a) throws BadLocationException {
                // Convertir caracter a mayúsculas
                str = str.toUpperCase();

                // Obtener el texto actual
                String currentText = getText(0, getLength());

                // Combinar el texto actual con la nueva cadena a insertar
                String newText = currentText.substring(0, offs) + str + currentText.substring(offs);

                // Verificar si la cadena cumple con la expresión regular y no excede el límite
                if (newText.matches("^-?\\d*(\\.\\d*)?$") && (getLength() + str.length()) <= limite) {
                    super.insertString(offs, str, a);
                }
            }
        };
    }
   
    
    /**
     * Guardar un contacto en el array
     * @param contacto Contacto añadir
     */
    public void nuevoContacto(Persona contacto){
        listaContactos.add(contacto);
    }
    
    /**
     * Guardar los contactos en binario
     * @param contactos Lista de contactos
     */
    private void guardarContactos(ArrayList<Persona> contactos) {
        try (ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream("contactos.ser"))) {
            out.writeObject(contactos);
            System.out.println("Contactos guardados en disco.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * Cargar los contactos en binario
     * @return 
     */
    private ArrayList<Persona> cargarContactos() {
        File file = new File("contactos.ser");
        if (file.exists()) {
            try (ObjectInputStream in = new ObjectInputStream(new FileInputStream("contactos.ser"))) {
                ArrayList<Persona> contactos = (ArrayList<Persona>) in.readObject();
                System.out.println("Contactos cargados desde el disco.");
                return contactos;
            } catch (IOException | ClassNotFoundException e) {
                e.printStackTrace();
            }
        }
        return new ArrayList<>(); // Devuelve una lista vacía si no se puede cargar
    }
    

    
    /**
     * Borrar tabla actual y volver a escribir todos los datos
     */
    public void actualizarTabla(){
        DefaultTableModel modelo = (DefaultTableModel) tablaContactos.getModel();
        modelo.setRowCount(0);//Eliminar datos
        
        for (Persona contacto: listaContactos){
          String[] fila = new String[4];
          fila[0] = contacto.getNombre();
          fila[1] = contacto.getTelefono();
          fila[2] = contacto.getCodigo();
          fila[3] = contacto.getClass().getSimpleName();
          modelo.addRow(fila);
        }
        guardarContactos(listaContactos);
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ImagenFigura;
    private javax.swing.JPanel SelectorFiguras;
    private javax.swing.JButton b0;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JButton bCalcularTemperatura;
    private javax.swing.JToggleButton bCirculo;
    private javax.swing.JToggleButton bCuadrado;
    private javax.swing.JButton bDivision;
    private javax.swing.JButton bEliminarContacto;
    private javax.swing.JToggleButton bElipse;
    private javax.swing.JToggleButton bEquilatero;
    private javax.swing.JToggleButton bEscaleno;
    private javax.swing.JToggleButton bIsoseles;
    private javax.swing.JButton bMultiplicacion;
    private javax.swing.JButton bNuevoContacto;
    private javax.swing.JToggleButton bPoligono;
    private javax.swing.JButton bPotencia;
    private javax.swing.JButton bPunto;
    private javax.swing.JButton bRaiz;
    private javax.swing.JToggleButton bRectangulo;
    private javax.swing.JButton bReinciar;
    private javax.swing.JButton bReset;
    private javax.swing.JButton bResta;
    private javax.swing.JButton bRestar;
    private javax.swing.JButton bResultado;
    private javax.swing.JButton bSuma;
    private javax.swing.JButton bSumar;
    private javax.swing.JButton bVerContacto;
    private javax.swing.JTextField cArea;
    private javax.swing.JTextField cDato1;
    private javax.swing.JTextField cDato2;
    private javax.swing.JTextField cDato3;
    private javax.swing.JTextField cDato4;
    private javax.swing.JTextField cPerimetro;
    private javax.swing.JButton calcularFG;
    private javax.swing.JButton calcularUnidadades1;
    private javax.swing.JButton calcularUnidades;
    private javax.swing.JTextField campoContador;
    private javax.swing.JTextField campoEntradaBases;
    private javax.swing.JTextField campoEntradaTemp;
    private javax.swing.JTextField campoEntradaUnidades;
    private javax.swing.JTextField campoSalidaBases;
    private javax.swing.JTextField campoSalidaTemp;
    private javax.swing.JTextField campoSalidaUnidades;
    private javax.swing.JPanel contenedorConversorUnidades;
    private javax.swing.JPanel contenedorConversorUnidades1;
    private javax.swing.JPanel contenerdorTemperatura;
    private javax.swing.JLabel etiqeutaTempSalida;
    private javax.swing.JLabel etiquetaTempEntrada;
    private javax.swing.ButtonGroup grupoFiguras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lArea;
    private javax.swing.JLabel lDato1;
    private javax.swing.JLabel lDato2;
    private javax.swing.JLabel lDato3;
    private javax.swing.JLabel lDato4;
    private javax.swing.JLabel lNombreFigura;
    private javax.swing.JLabel lPerimetro;
    private javax.swing.JPanel pBases;
    private javax.swing.JPanel pContador;
    private javax.swing.JPanel pContenedorContador;
    private javax.swing.JPanel pConversorTemperatura;
    private javax.swing.JPanel pCuadrilateros;
    private javax.swing.JPanel pDato1;
    private javax.swing.JPanel pDato2;
    private javax.swing.JPanel pDato3;
    private javax.swing.JPanel pDato4;
    private javax.swing.JPanel pFiguras;
    private javax.swing.JPanel pModular;
    private javax.swing.JPanel pPoligonos;
    private javax.swing.JPanel pSalida;
    private javax.swing.JPanel pTriangulos;
    private javax.swing.JTextField pantallaCalculadora;
    private javax.swing.JTextField pantallaMemoria;
    private javax.swing.JTabbedPane selector;
    private javax.swing.JComboBox<String> selectorBasesEntrada;
    private javax.swing.JComboBox<String> selectorBasesSalida;
    private javax.swing.JTabbedPane selectorFiguras;
    private javax.swing.JComboBox<String> selectorMedidasEntrada;
    private javax.swing.JComboBox<String> selectorMedidasSalida;
    private javax.swing.JComboBox<String> selectorTempEntrada;
    private javax.swing.JComboBox<String> selectorTempSalida;
    private javax.swing.JTable tablaContactos;
    // End of variables declaration//GEN-END:variables
}
